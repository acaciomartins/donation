{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"../../utils/clamp","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"react-navigation","data":{"isAsync":false}},{"name":"react-native-screens","data":{"isAsync":false}},{"name":"./StackViewCard","data":{"isAsync":false}},{"name":"../Header/Header","data":{"isAsync":false}},{"name":"./StackViewTransitionConfigs","data":{"isAsync":false}},{"name":"../../utils/ReactNativeFeatures","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutProperties\"));\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/extends\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"react\"));\n\n  var _clamp = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"../../utils/clamp\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[11], \"react-native\");\n\n  var _reactNavigation = _$$_REQUIRE(_dependencyMap[12], \"react-navigation\");\n\n  var _reactNativeScreens = _$$_REQUIRE(_dependencyMap[13], \"react-native-screens\");\n\n  var _StackViewCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"./StackViewCard\"));\n\n  var _Header = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15], \"../Header/Header\"));\n\n  var _StackViewTransitionConfigs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16], \"./StackViewTransitionConfigs\"));\n\n  var _ReactNativeFeatures = _$$_REQUIRE(_dependencyMap[17], \"../../utils/ReactNativeFeatures\");\n\n  var _jsxFileName = \"/home/desenv/workspace/nodes/doacoes/front/donationApp/node_modules/react-navigation-stack/dist/views/StackView/StackViewLayout.js\";\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var emptyFunction = function emptyFunction() {};\n\n  var IPHONE_XS_HEIGHT = 812;\n  var IPHONE_XR_HEIGHT = 896;\n\n  var _Dimensions$get = _reactNative.Dimensions.get('window'),\n      WINDOW_WIDTH = _Dimensions$get.width,\n      WINDOW_HEIGHT = _Dimensions$get.height;\n\n  var IS_IPHONE_X = _reactNative.Platform.OS === 'ios' && !_reactNative.Platform.isPad && !_reactNative.Platform.isTVOS && (WINDOW_HEIGHT === IPHONE_XS_HEIGHT || WINDOW_WIDTH === IPHONE_XS_HEIGHT || WINDOW_HEIGHT === IPHONE_XR_HEIGHT || WINDOW_WIDTH === IPHONE_XR_HEIGHT);\n\n  var EaseInOut = _reactNative.Easing.inOut(_reactNative.Easing.ease);\n\n  var HEADER_LAYOUT_PRESET_VALUES = ['center', 'left'];\n  var HEADER_TRANSITION_PRESET_VALUES = ['uikit', 'fade-in-place'];\n  var ANIMATION_DURATION = 500;\n  var POSITION_THRESHOLD = 1 / 2;\n  var RESPOND_THRESHOLD = 20;\n  var GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 25;\n  var GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\n\n  var animatedSubscribeValue = function animatedSubscribeValue(animatedValue) {\n    if (!animatedValue.__isNative) {\n      return;\n    }\n\n    if (Object.keys(animatedValue._listeners).length === 0) {\n      animatedValue.addListener(emptyFunction);\n    }\n  };\n\n  var getDefaultHeaderHeight = function getDefaultHeaderHeight(isLandscape) {\n    if (_reactNative.Platform.OS === 'ios') {\n      if (isLandscape && !_reactNative.Platform.isPad) {\n        return 32;\n      } else if (IS_IPHONE_X) {\n        return 88;\n      } else {\n        return 64;\n      }\n    } else {\n      return 56;\n    }\n  };\n\n  var StackViewLayout = function (_React$Component) {\n    (0, _inherits2.default)(StackViewLayout, _React$Component);\n\n    function StackViewLayout(props) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, StackViewLayout);\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(StackViewLayout).call(this, props));\n      _this._gestureStartValue = 0;\n      _this._isResponding = false;\n      _this._immediateIndex = null;\n      _this._panResponder = _reactNative.PanResponder.create({\n        onPanResponderTerminate: function onPanResponderTerminate() {\n          var navigation = _this.props.transitionProps.navigation;\n          var index = navigation.state.index;\n          _this._isResponding = false;\n\n          _this._reset(index, 0);\n\n          _this.props.onGestureCanceled && _this.props.onGestureCanceled();\n        },\n        onPanResponderGrant: function onPanResponderGrant() {\n          var _this$props$transitio = _this.props.transitionProps,\n              navigation = _this$props$transitio.navigation,\n              position = _this$props$transitio.position,\n              scene = _this$props$transitio.scene;\n          var index = navigation.state.index;\n\n          if (index !== scene.index) {\n            return false;\n          }\n\n          position.stopAnimation(function (value) {\n            _this._isResponding = true;\n            _this._gestureStartValue = value;\n          });\n          _this.props.onGestureBegin && _this.props.onGestureBegin();\n        },\n        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(event, gesture) {\n          var _this$props = _this.props,\n              _this$props$transitio2 = _this$props.transitionProps,\n              navigation = _this$props$transitio2.navigation,\n              layout = _this$props$transitio2.layout,\n              scene = _this$props$transitio2.scene,\n              mode = _this$props.mode;\n          var index = navigation.state.index;\n          var isVertical = mode === 'modal';\n          var options = scene.descriptor.options;\n          var gestureDirection = options.gestureDirection;\n          var gestureDirectionInverted = typeof gestureDirection === 'string' ? gestureDirection === 'inverted' : _reactNative.I18nManager.isRTL;\n\n          if (index !== scene.index) {\n            return false;\n          }\n\n          var immediateIndex = _this._immediateIndex == null ? index : _this._immediateIndex;\n          var currentDragDistance = gesture[isVertical ? 'dy' : 'dx'];\n          var currentDragPosition = event.nativeEvent[isVertical ? 'pageY' : 'pageX'];\n          var axisLength = isVertical ? layout.height.__getValue() : layout.width.__getValue();\n          var axisHasBeenMeasured = !!axisLength;\n          var screenEdgeDistance = gestureDirectionInverted ? axisLength - (currentDragPosition - currentDragDistance) : currentDragPosition - currentDragDistance;\n          var _options$gestureRespo = options.gestureResponseDistance,\n              userGestureResponseDistance = _options$gestureRespo === void 0 ? {} : _options$gestureRespo;\n          var gestureResponseDistance = isVertical ? userGestureResponseDistance.vertical || GESTURE_RESPONSE_DISTANCE_VERTICAL : userGestureResponseDistance.horizontal || GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n\n          if (screenEdgeDistance > gestureResponseDistance) {\n            return false;\n          }\n\n          var hasDraggedEnough = Math.abs(currentDragDistance) > RESPOND_THRESHOLD;\n          var isOnFirstCard = immediateIndex === 0;\n          var shouldSetResponder = hasDraggedEnough && axisHasBeenMeasured && !isOnFirstCard;\n          return shouldSetResponder;\n        },\n        onPanResponderMove: function onPanResponderMove(event, gesture) {\n          var _this$props2 = _this.props,\n              _this$props2$transiti = _this$props2.transitionProps,\n              navigation = _this$props2$transiti.navigation,\n              position = _this$props2$transiti.position,\n              layout = _this$props2$transiti.layout,\n              scene = _this$props2$transiti.scene,\n              mode = _this$props2.mode;\n          var index = navigation.state.index;\n          var isVertical = mode === 'modal';\n          var options = scene.descriptor.options;\n          var gestureDirection = options.gestureDirection;\n          var gestureDirectionInverted = typeof gestureDirection === 'string' ? gestureDirection === 'inverted' : _reactNative.I18nManager.isRTL;\n          var startValue = _this._gestureStartValue;\n          var axis = isVertical ? 'dy' : 'dx';\n          var axisDistance = isVertical ? layout.height.__getValue() : layout.width.__getValue();\n          var currentValue = axis === 'dx' && gestureDirectionInverted ? startValue + gesture[axis] / axisDistance : startValue - gesture[axis] / axisDistance;\n          var value = (0, _clamp.default)(index - 1, currentValue, index);\n          position.setValue(value);\n        },\n        onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {\n          return false;\n        },\n        onPanResponderRelease: function onPanResponderRelease(event, gesture) {\n          var _this$props3 = _this.props,\n              _this$props3$transiti = _this$props3.transitionProps,\n              navigation = _this$props3$transiti.navigation,\n              position = _this$props3$transiti.position,\n              layout = _this$props3$transiti.layout,\n              scene = _this$props3$transiti.scene,\n              mode = _this$props3.mode;\n          var index = navigation.state.index;\n          var isVertical = mode === 'modal';\n          var options = scene.descriptor.options;\n          var gestureDirection = options.gestureDirection;\n          var gestureDirectionInverted = typeof gestureDirection === 'string' ? gestureDirection === 'inverted' : _reactNative.I18nManager.isRTL;\n\n          if (!_this._isResponding) {\n            return;\n          }\n\n          _this._isResponding = false;\n          var immediateIndex = _this._immediateIndex == null ? index : _this._immediateIndex;\n          var axisDistance = isVertical ? layout.height.__getValue() : layout.width.__getValue();\n          var movementDirection = gestureDirectionInverted ? -1 : 1;\n          var movedDistance = movementDirection * gesture[isVertical ? 'dy' : 'dx'];\n          var gestureVelocity = movementDirection * gesture[isVertical ? 'vy' : 'vx'];\n          var defaultVelocity = axisDistance / ANIMATION_DURATION;\n          var velocity = Math.max(Math.abs(gestureVelocity), defaultVelocity);\n          var resetDuration = gestureDirectionInverted ? (axisDistance - movedDistance) / velocity : movedDistance / velocity;\n          var goBackDuration = gestureDirectionInverted ? movedDistance / velocity : (axisDistance - movedDistance) / velocity;\n          position.stopAnimation(function (value) {\n            if (gestureVelocity < -0.5) {\n              _this.props.onGestureCanceled && _this.props.onGestureCanceled();\n\n              _this._reset(immediateIndex, resetDuration);\n\n              return;\n            }\n\n            if (gestureVelocity > 0.5) {\n              _this.props.onGestureFinish && _this.props.onGestureFinish();\n\n              _this._goBack(immediateIndex, goBackDuration);\n\n              return;\n            }\n\n            if (value <= index - POSITION_THRESHOLD) {\n              _this.props.onGestureFinish && _this.props.onGestureFinish();\n\n              _this._goBack(immediateIndex, goBackDuration);\n            } else {\n              _this.props.onGestureCanceled && _this.props.onGestureCanceled();\n\n              _this._reset(immediateIndex, resetDuration);\n            }\n          });\n        }\n      });\n\n      _this._onFloatingHeaderLayout = function (e) {\n        _this.setState({\n          floatingHeaderHeight: e.nativeEvent.layout.height\n        });\n      };\n\n      _this._getTransitionConfig = function () {\n        var isModal = _this.props.mode === 'modal';\n        return _StackViewTransitionConfigs.default.getTransitionConfig(_this.props.transitionConfig, _this.props.transitionProps, _this.props.lastTransitionProps, isModal);\n      };\n\n      _this._renderCard = function (scene) {\n        var _this$_getTransitionC = _this._getTransitionConfig(),\n            screenInterpolator = _this$_getTransitionC.screenInterpolator;\n\n        var style = screenInterpolator && screenInterpolator(_objectSpread({}, _this.props.transitionProps, {\n          scene: scene\n        }));\n        var options = scene.descriptor.options;\n        var hasHeader = options.header !== null;\n\n        var headerMode = _this._getHeaderMode();\n\n        var paddingTop = 0;\n\n        if (hasHeader && headerMode === 'float' && !options.headerTransparent) {\n          paddingTop = _this.state.floatingHeaderHeight;\n        }\n\n        return _react.default.createElement(_StackViewCard.default, (0, _extends2.default)({}, _this.props.transitionProps, {\n          key: \"card_\" + scene.key,\n          transparent: _this.props.transparentCard,\n          style: [style, {\n            paddingTop: paddingTop\n          }, _this.props.cardStyle],\n          scene: scene,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 507\n          }\n        }), _this._renderInnerScene(scene));\n      };\n\n      _this.state = {\n        floatingHeaderHeight: getDefaultHeaderHeight(props.isLandscape)\n      };\n      return _this;\n    }\n\n    (0, _createClass2.default)(StackViewLayout, [{\n      key: \"_renderHeader\",\n      value: function _renderHeader(scene, headerMode) {\n        var options = scene.descriptor.options;\n        var header = options.header;\n\n        if (__DEV__ && typeof header === 'string') {\n          throw new Error(\"Invalid header value: \\\"\" + header + \"\\\". The header option must be a valid React component or null, not a string.\");\n        }\n\n        if (header === null && headerMode === 'screen') {\n          return null;\n        }\n\n        if (_react.default.isValidElement(header)) {\n          return header;\n        }\n\n        var renderHeader = header || function (props) {\n          return _react.default.createElement(_Header.default, (0, _extends2.default)({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            }\n          }));\n        };\n\n        var _this$_getTransitionC2 = this._getTransitionConfig(),\n            headerLeftInterpolator = _this$_getTransitionC2.headerLeftInterpolator,\n            headerTitleInterpolator = _this$_getTransitionC2.headerTitleInterpolator,\n            headerRightInterpolator = _this$_getTransitionC2.headerRightInterpolator,\n            headerBackgroundInterpolator = _this$_getTransitionC2.headerBackgroundInterpolator;\n\n        var _this$props4 = this.props,\n            transitionProps = _this$props4.transitionProps,\n            passProps = (0, _objectWithoutProperties2.default)(_this$props4, [\"transitionProps\"]);\n        return _react.default.createElement(_reactNavigation.NavigationProvider, {\n          value: scene.descriptor.navigation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          }\n        }, renderHeader(_objectSpread({}, passProps, {}, transitionProps, {\n          scene: scene,\n          mode: headerMode,\n          transitionPreset: this._getHeaderTransitionPreset(),\n          layoutPreset: this._getHeaderLayoutPreset(),\n          backTitleVisible: this._getheaderBackTitleVisible(),\n          leftInterpolator: headerLeftInterpolator,\n          titleInterpolator: headerTitleInterpolator,\n          rightInterpolator: headerRightInterpolator,\n          backgroundInterpolator: headerBackgroundInterpolator\n        })));\n      }\n    }, {\n      key: \"_animatedSubscribe\",\n      value: function _animatedSubscribe(props) {\n        animatedSubscribeValue(props.transitionProps.layout.width);\n        animatedSubscribeValue(props.transitionProps.layout.height);\n        animatedSubscribeValue(props.transitionProps.position);\n      }\n    }, {\n      key: \"_reset\",\n      value: function _reset(resetToIndex, duration) {\n        if (_reactNative.Platform.OS === 'ios' && (0, _ReactNativeFeatures.supportsImprovedSpringAnimation)()) {\n          _reactNative.Animated.spring(this.props.transitionProps.position, {\n            toValue: resetToIndex,\n            stiffness: 5000,\n            damping: 600,\n            mass: 3,\n            useNativeDriver: this.props.transitionProps.position.__isNative\n          }).start();\n        } else {\n          _reactNative.Animated.timing(this.props.transitionProps.position, {\n            toValue: resetToIndex,\n            duration: duration,\n            easing: EaseInOut,\n            useNativeDriver: this.props.transitionProps.position.__isNative\n          }).start();\n        }\n      }\n    }, {\n      key: \"_goBack\",\n      value: function _goBack(backFromIndex, duration) {\n        var _this2 = this;\n\n        var _this$props$transitio3 = this.props.transitionProps,\n            navigation = _this$props$transitio3.navigation,\n            position = _this$props$transitio3.position,\n            scenes = _this$props$transitio3.scenes;\n        var toValue = Math.max(backFromIndex - 1, 0);\n        this._immediateIndex = toValue;\n\n        var onCompleteAnimation = function onCompleteAnimation() {\n          _this2._immediateIndex = null;\n          var backFromScene = scenes.find(function (s) {\n            return s.index === toValue + 1;\n          });\n\n          if (!_this2._isResponding && backFromScene) {\n            navigation.dispatch(_reactNavigation.NavigationActions.back({\n              key: backFromScene.route.key,\n              immediate: true\n            }));\n            navigation.dispatch(_reactNavigation.StackActions.completeTransition());\n          }\n        };\n\n        if (_reactNative.Platform.OS === 'ios' && (0, _ReactNativeFeatures.supportsImprovedSpringAnimation)()) {\n          _reactNative.Animated.spring(position, {\n            toValue: toValue,\n            stiffness: 5000,\n            damping: 600,\n            mass: 3,\n            useNativeDriver: position.__isNative\n          }).start(onCompleteAnimation);\n        } else {\n          _reactNative.Animated.timing(position, {\n            toValue: toValue,\n            duration: duration,\n            easing: EaseInOut,\n            useNativeDriver: position.__isNative\n          }).start(onCompleteAnimation);\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this3 = this;\n\n        var floatingHeader = null;\n\n        var headerMode = this._getHeaderMode();\n\n        if (headerMode === 'float') {\n          var _scene = this.props.transitionProps.scene;\n          floatingHeader = _react.default.createElement(_reactNative.View, {\n            style: styles.floatingHeader,\n            pointerEvents: \"box-none\",\n            onLayout: this._onFloatingHeaderLayout,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 384\n            }\n          }, this._renderHeader(_scene, headerMode));\n        }\n\n        var _this$props$transitio4 = this.props.transitionProps,\n            scene = _this$props$transitio4.scene,\n            scenes = _this$props$transitio4.scenes;\n        var options = scene.descriptor.options;\n        var gesturesEnabled = typeof options.gesturesEnabled === 'boolean' ? options.gesturesEnabled : _reactNative.Platform.OS === 'ios';\n        var responder = !gesturesEnabled ? null : this._panResponder;\n        var handlers = gesturesEnabled ? responder.panHandlers : {};\n        var containerStyle = [styles.container, this._getTransitionConfig().containerStyle];\n        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({}, handlers, {\n          style: containerStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400\n          }\n        }), _react.default.createElement(_reactNativeScreens.ScreenContainer, {\n          style: styles.scenes,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 401\n          }\n        }, scenes.map(function (s) {\n          return _this3._renderCard(s);\n        })), floatingHeader);\n      }\n    }, {\n      key: \"_getHeaderMode\",\n      value: function _getHeaderMode() {\n        if (this.props.headerMode) {\n          return this.props.headerMode;\n        }\n\n        if (_reactNative.Platform.OS === 'android' || this.props.mode === 'modal') {\n          return 'screen';\n        }\n\n        return 'float';\n      }\n    }, {\n      key: \"_getHeaderLayoutPreset\",\n      value: function _getHeaderLayoutPreset() {\n        var headerLayoutPreset = this.props.headerLayoutPreset;\n\n        if (headerLayoutPreset) {\n          if (__DEV__) {\n            if (this._getHeaderTransitionPreset() === 'uikit' && headerLayoutPreset === 'left' && _reactNative.Platform.OS === 'ios') {\n              console.warn(\"headerTransitionPreset with the value 'uikit' is incompatible with headerLayoutPreset 'left'\");\n            }\n          }\n\n          if (HEADER_LAYOUT_PRESET_VALUES.includes(headerLayoutPreset)) {\n            return headerLayoutPreset;\n          }\n\n          if (__DEV__) {\n            console.error(\"Invalid configuration applied for headerLayoutPreset - expected one of \" + HEADER_LAYOUT_PRESET_VALUES.join(', ') + \" but received \" + JSON.stringify(headerLayoutPreset));\n          }\n        }\n\n        if (_reactNative.Platform.OS === 'android') {\n          return 'left';\n        } else {\n          return 'center';\n        }\n      }\n    }, {\n      key: \"_getHeaderTransitionPreset\",\n      value: function _getHeaderTransitionPreset() {\n        if (_reactNative.Platform.OS === 'android' || this._getHeaderMode() === 'screen') {\n          return 'fade-in-place';\n        }\n\n        var headerTransitionPreset = this.props.headerTransitionPreset;\n\n        if (headerTransitionPreset) {\n          if (HEADER_TRANSITION_PRESET_VALUES.includes(headerTransitionPreset)) {\n            return headerTransitionPreset;\n          }\n\n          if (__DEV__) {\n            console.error(\"Invalid configuration applied for headerTransitionPreset - expected one of \" + HEADER_TRANSITION_PRESET_VALUES.join(', ') + \" but received \" + JSON.stringify(headerTransitionPreset));\n          }\n        }\n\n        return 'fade-in-place';\n      }\n    }, {\n      key: \"_getheaderBackTitleVisible\",\n      value: function _getheaderBackTitleVisible() {\n        var headerBackTitleVisible = this.props.headerBackTitleVisible;\n        return headerBackTitleVisible;\n      }\n    }, {\n      key: \"_renderInnerScene\",\n      value: function _renderInnerScene(scene) {\n        var _scene$descriptor = scene.descriptor,\n            navigation = _scene$descriptor.navigation,\n            getComponent = _scene$descriptor.getComponent;\n        var SceneComponent = getComponent();\n        var screenProps = this.props.screenProps;\n\n        var headerMode = this._getHeaderMode();\n\n        if (headerMode === 'screen') {\n          return _react.default.createElement(_reactNative.View, {\n            style: styles.container,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 476\n            }\n          }, _react.default.createElement(_reactNative.View, {\n            style: styles.scenes,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 477\n            }\n          }, _react.default.createElement(_reactNavigation.SceneView, {\n            screenProps: screenProps,\n            navigation: navigation,\n            component: SceneComponent,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 478\n            }\n          })), this._renderHeader(scene, headerMode));\n        }\n\n        return _react.default.createElement(_reactNavigation.SceneView, {\n          screenProps: screenProps,\n          navigation: navigation,\n          component: SceneComponent,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 483\n          }\n        });\n      }\n    }]);\n    return StackViewLayout;\n  }(_react.default.Component);\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flex: 1,\n      flexDirection: 'column-reverse',\n      overflow: 'hidden'\n    },\n    scenes: {\n      flex: 1\n    },\n    floatingHeader: {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      right: 0\n    }\n  });\n\n  var _default = (0, _reactNavigation.withOrientation)(StackViewLayout);\n\n  exports.default = _default;\n});","lineCount":605,"map":[[25,0,1,0],[27,0,3,0],[29,0,4,0],[31,0,5,0],[33,0,6,0],[35,0,8,0],[37,0,9,0],[39,0,11,0],[41,0,12,0],[49,0,14,0],[49,6,14,6,"emptyFunction"],[49,19,14,19],[49,22,14,22],[49,31,14,6,"emptyFunction"],[49,44,14,22],[49,47,14,28],[49,48,14,30],[49,49,14,0],[51,0,16,0],[51,6,16,6,"IPHONE_XS_HEIGHT"],[51,22,16,22],[51,25,16,25],[51,28,16,0],[52,0,17,0],[52,6,17,6,"IPHONE_XR_HEIGHT"],[52,22,17,22],[52,25,17,25],[52,28,17,0],[54,24,18,55,"Dimensions"],[54,48,18,66,"get"],[54,51,18,55],[54,52,18,70],[54,60,18,55],[54,61],[55,6,18,15,"WINDOW_WIDTH"],[55,18],[55,37,18,8,"width"],[55,42],[56,6,18,37,"WINDOW_HEIGHT"],[56,19],[56,38,18,29,"height"],[56,44],[58,0,19,0],[58,6,19,6,"IS_IPHONE_X"],[58,17,19,17],[58,20,19,20,"Platform"],[58,42,19,29,"OS"],[58,44,19,20],[58,49,19,36],[58,54,19,20],[58,58,19,45],[58,59,19,46,"Platform"],[58,81,19,55,"isPad"],[58,86,19,20],[58,90,19,64],[58,91,19,65,"Platform"],[58,113,19,74,"isTVOS"],[58,119,19,20],[58,124,19,85,"WINDOW_HEIGHT"],[58,137,19,98],[58,142,19,103,"IPHONE_XS_HEIGHT"],[58,158,19,85],[58,162,19,123,"WINDOW_WIDTH"],[58,174,19,135],[58,179,19,140,"IPHONE_XS_HEIGHT"],[58,195,19,85],[58,199,19,160,"WINDOW_HEIGHT"],[58,212,19,173],[58,217,19,178,"IPHONE_XR_HEIGHT"],[58,233,19,85],[58,237,19,198,"WINDOW_WIDTH"],[58,249,19,210],[58,254,19,215,"IPHONE_XR_HEIGHT"],[58,270,19,20],[58,271,19,0],[60,0,21,0],[60,6,21,6,"EaseInOut"],[60,15,21,15],[60,18,21,18,"Easing"],[60,38,21,25,"inOut"],[60,43,21,18],[60,44,21,31,"Easing"],[60,64,21,38,"ease"],[60,68,21,18],[60,69,21,0],[62,0,26,0],[62,6,26,6,"HEADER_LAYOUT_PRESET_VALUES"],[62,33,26,33],[62,36,26,36],[62,37,26,37],[62,45,26,36],[62,47,26,47],[62,53,26,36],[62,54,26,0],[63,0,27,0],[63,6,27,6,"HEADER_TRANSITION_PRESET_VALUES"],[63,37,27,37],[63,40,27,40],[63,41,27,41],[63,48,27,40],[63,50,27,50],[63,65,27,40],[63,66,27,0],[64,0,34,0],[64,6,34,6,"ANIMATION_DURATION"],[64,24,34,24],[64,27,34,27],[64,30,34,0],[65,0,41,0],[65,6,41,6,"POSITION_THRESHOLD"],[65,24,41,24],[65,27,41,27],[65,31,41,31],[65,32,41,0],[66,0,46,0],[66,6,46,6,"RESPOND_THRESHOLD"],[66,23,46,23],[66,26,46,26],[66,28,46,0],[67,0,51,0],[67,6,51,6,"GESTURE_RESPONSE_DISTANCE_HORIZONTAL"],[67,42,51,42],[67,45,51,45],[67,47,51,0],[68,0,52,0],[68,6,52,6,"GESTURE_RESPONSE_DISTANCE_VERTICAL"],[68,40,52,40],[68,43,52,43],[68,46,52,0],[70,0,54,0],[70,6,54,6,"animatedSubscribeValue"],[70,28,54,28],[70,31,54,31],[70,40,54,6,"animatedSubscribeValue"],[70,62,54,31],[70,63,54,31,"animatedValue"],[70,76,54,44],[70,78,54,48],[71,0,55,2],[71,8,55,6],[71,9,55,7,"animatedValue"],[71,22,55,20],[71,23,55,21,"__isNative"],[71,33,55,2],[71,35,55,33],[72,0,56,4],[73,0,57,3],[75,0,58,2],[75,8,58,6,"Object"],[75,14,58,12],[75,15,58,13,"keys"],[75,19,58,6],[75,20,58,18,"animatedValue"],[75,33,58,31],[75,34,58,32,"_listeners"],[75,44,58,6],[75,46,58,44,"length"],[75,52,58,6],[75,57,58,55],[75,58,58,2],[75,60,58,58],[76,0,59,4,"animatedValue"],[76,6,59,4,"animatedValue"],[76,19,59,17],[76,20,59,18,"addListener"],[76,31,59,4],[76,32,59,30,"emptyFunction"],[76,45,59,4],[77,0,60,3],[78,0,61,1],[78,3,54,0],[80,0,63,0],[80,6,63,6,"getDefaultHeaderHeight"],[80,28,63,28],[80,31,63,31],[80,40,63,6,"getDefaultHeaderHeight"],[80,62,63,31],[80,63,63,31,"isLandscape"],[80,74,63,42],[80,76,63,46],[81,0,64,2],[81,8,64,6,"Platform"],[81,30,64,15,"OS"],[81,32,64,6],[81,37,64,22],[81,42,64,2],[81,44,64,29],[82,0,65,4],[82,10,65,8,"isLandscape"],[82,21,65,19],[82,25,65,23],[82,26,65,24,"Platform"],[82,48,65,33,"isPad"],[82,53,65,4],[82,55,65,40],[83,0,66,6],[83,15,66,13],[83,17,66,6],[84,0,67,5],[84,7,65,4],[84,13,67,11],[84,17,67,15,"IS_IPHONE_X"],[84,28,67,11],[84,30,67,28],[85,0,68,6],[85,15,68,13],[85,17,68,6],[86,0,69,5],[86,7,67,11],[86,13,69,11],[87,0,70,6],[87,15,70,13],[87,17,70,6],[88,0,71,5],[89,0,72,3],[89,5,64,2],[89,11,72,9],[90,0,73,4],[90,13,73,11],[90,15,73,4],[91,0,74,3],[92,0,75,1],[92,3,63,0],[94,6,77,6,"StackViewLayout"],[94,21],[97,0,98,2],[97,29,98,14,"props"],[97,34,98,2],[97,36,98,21],[98,0,98,21],[100,0,98,21],[101,0,99,4],[101,119,99,10,"props"],[101,124,99,4],[102,0,98,21],[102,12,84,2,"_gestureStartValue"],[102,30,98,21],[102,33,84,23],[102,34,98,21],[103,0,98,21],[103,12,87,2,"_isResponding"],[103,25,98,21],[103,28,87,18],[103,33,98,21],[104,0,98,21],[104,12,96,2,"_immediateIndex"],[104,27,98,21],[104,30,96,20],[104,34,98,21],[105,0,98,21],[105,12,227,2,"_panResponder"],[105,25,98,21],[105,28,227,18,"PanResponder"],[105,54,227,31,"create"],[105,60,227,18],[105,61,227,38],[106,0,228,4,"onPanResponderTerminate"],[106,8,228,4,"onPanResponderTerminate"],[106,31,228,27],[106,33,228,29],[106,68,228,35],[107,0,228,35],[107,14,229,14,"navigation"],[107,24,228,35],[107,27,229,29],[107,33,229,34,"props"],[107,38,229,29],[107,39,229,40,"transitionProps"],[107,54,228,35],[107,55,229,14,"navigation"],[107,65,228,35],[108,0,228,35],[108,14,230,14,"index"],[108,19,228,35],[108,22,230,24,"navigation"],[108,32,230,34],[108,33,230,35,"state"],[108,38,228,35],[108,39,230,14,"index"],[108,44,228,35],[109,0,231,6],[109,16,231,11,"_isResponding"],[109,29,231,6],[109,32,231,27],[109,37,231,6],[111,0,232,6],[111,16,232,11,"_reset"],[111,22,232,6],[111,23,232,18,"index"],[111,28,232,6],[111,30,232,25],[111,31,232,6],[113,0,233,6],[113,16,233,11,"props"],[113,21,233,6],[113,22,233,17,"onGestureCanceled"],[113,39,233,6],[113,43,233,38],[113,49,233,43,"props"],[113,54,233,38],[113,55,233,49,"onGestureCanceled"],[113,72,233,38],[113,74,233,6],[114,0,234,5],[114,9,227,38],[115,0,235,4,"onPanResponderGrant"],[115,8,235,4,"onPanResponderGrant"],[115,27,235,23],[115,29,235,25],[115,60,235,31],[116,0,235,31],[116,38,238,10],[116,44,238,15,"props"],[116,49,235,31],[116,50,237,8,"transitionProps"],[116,65,235,31],[117,0,235,31],[117,14,237,27,"navigation"],[117,24,235,31],[117,49,237,27,"navigation"],[117,59,235,31],[118,0,235,31],[118,14,237,39,"position"],[118,22,235,31],[118,47,237,39,"position"],[118,55,235,31],[119,0,235,31],[119,14,237,49,"scene"],[119,19,235,31],[119,44,237,49,"scene"],[119,49,235,31],[120,0,235,31],[120,14,239,14,"index"],[120,19,235,31],[120,22,239,24,"navigation"],[120,32,239,34],[120,33,239,35,"state"],[120,38,235,31],[120,39,239,14,"index"],[120,44,235,31],[122,0,241,6],[122,14,241,10,"index"],[122,19,241,15],[122,24,241,20,"scene"],[122,29,241,25],[122,30,241,26,"index"],[122,35,241,6],[122,37,241,33],[123,0,242,8],[123,19,242,15],[123,24,242,8],[124,0,243,7],[126,0,245,6,"position"],[126,10,245,6,"position"],[126,18,245,14],[126,19,245,15,"stopAnimation"],[126,32,245,6],[126,33,245,29],[126,43,245,29,"value"],[126,48,245,34],[126,50,245,38],[127,0,246,8],[127,18,246,13,"_isResponding"],[127,31,246,8],[127,34,246,29],[127,38,246,8],[128,0,247,8],[128,18,247,13,"_gestureStartValue"],[128,36,247,8],[128,39,247,34,"value"],[128,44,247,8],[129,0,248,7],[129,11,245,6],[130,0,249,6],[130,16,249,11,"props"],[130,21,249,6],[130,22,249,17,"onGestureBegin"],[130,36,249,6],[130,40,249,35],[130,46,249,40,"props"],[130,51,249,35],[130,52,249,46,"onGestureBegin"],[130,66,249,35],[130,68,249,6],[131,0,250,5],[131,9,227,38],[132,0,251,4,"onMoveShouldSetPanResponder"],[132,8,251,4,"onMoveShouldSetPanResponder"],[132,35,251,31],[132,37,251,33],[132,74,251,34,"event"],[132,79,251,33],[132,81,251,41,"gesture"],[132,88,251,33],[132,90,251,53],[133,0,251,53],[133,28,255,10],[133,34,255,15,"props"],[133,39,251,53],[134,0,251,53],[134,51,253,8,"transitionProps"],[134,66,251,53],[135,0,251,53],[135,14,253,27,"navigation"],[135,24,251,53],[135,50,253,27,"navigation"],[135,60,251,53],[136,0,251,53],[136,14,253,39,"layout"],[136,20,251,53],[136,46,253,39,"layout"],[136,52,251,53],[137,0,251,53],[137,14,253,47,"scene"],[137,19,251,53],[137,45,253,47,"scene"],[137,50,251,53],[138,0,251,53],[138,14,254,8,"mode"],[138,18,251,53],[138,33,254,8,"mode"],[138,37,251,53],[139,0,251,53],[139,14,256,14,"index"],[139,19,251,53],[139,22,256,24,"navigation"],[139,32,256,34],[139,33,256,35,"state"],[139,38,251,53],[139,39,256,14,"index"],[139,44,251,53],[140,0,257,6],[140,14,257,12,"isVertical"],[140,24,257,22],[140,27,257,25,"mode"],[140,31,257,29],[140,36,257,34],[140,43,257,6],[141,0,251,53],[141,14,258,14,"options"],[141,21,251,53],[141,24,258,26,"scene"],[141,29,258,31],[141,30,258,32,"descriptor"],[141,40,251,53],[141,41,258,14,"options"],[141,48,251,53],[142,0,259,6],[142,14,259,12,"gestureDirection"],[142,30,259,28],[142,33,259,31,"options"],[142,40,259,38],[142,41,259,39,"gestureDirection"],[142,57,259,6],[143,0,261,6],[143,14,261,12,"gestureDirectionInverted"],[143,38,261,36],[143,41,261,39],[143,48,261,46,"gestureDirection"],[143,64,261,39],[143,69,261,67],[143,77,261,39],[143,80,261,78,"gestureDirection"],[143,96,261,94],[143,101,261,99],[143,111,261,39],[143,114,261,112,"I18nManager"],[143,139,261,124,"isRTL"],[143,144,261,6],[145,0,263,6],[145,14,263,10,"index"],[145,19,263,15],[145,24,263,20,"scene"],[145,29,263,25],[145,30,263,26,"index"],[145,35,263,6],[145,37,263,33],[146,0,264,8],[146,19,264,15],[146,24,264,8],[147,0,265,7],[149,0,267,6],[149,14,267,12,"immediateIndex"],[149,28,267,26],[149,31,267,29],[149,37,267,34,"_immediateIndex"],[149,52,267,29],[149,56,267,53],[149,60,267,29],[149,63,267,60,"index"],[149,68,267,29],[149,71,267,68],[149,77,267,73,"_immediateIndex"],[149,92,267,6],[150,0,268,6],[150,14,268,12,"currentDragDistance"],[150,33,268,31],[150,36,268,34,"gesture"],[150,43,268,41],[150,44,268,42,"isVertical"],[150,54,268,52],[150,57,268,55],[150,61,268,52],[150,64,268,62],[150,68,268,41],[150,69,268,6],[151,0,269,6],[151,14,269,12,"currentDragPosition"],[151,33,269,31],[151,36,269,34,"event"],[151,41,269,39],[151,42,269,40,"nativeEvent"],[151,53,269,34],[151,54,269,52,"isVertical"],[151,64,269,62],[151,67,269,65],[151,74,269,62],[151,77,269,75],[151,84,269,34],[151,85,269,6],[152,0,270,6],[152,14,270,12,"axisLength"],[152,24,270,22],[152,27,270,25,"isVertical"],[152,37,270,35],[152,40,270,38,"layout"],[152,46,270,44],[152,47,270,45,"height"],[152,53,270,38],[152,54,270,52,"__getValue"],[152,64,270,38],[152,66,270,35],[152,69,270,67,"layout"],[152,75,270,73],[152,76,270,74,"width"],[152,81,270,67],[152,82,270,80,"__getValue"],[152,92,270,67],[152,94,270,6],[153,0,271,6],[153,14,271,12,"axisHasBeenMeasured"],[153,33,271,31],[153,36,271,34],[153,37,271,35],[153,38,271,36,"axisLength"],[153,48,271,6],[154,0,274,6],[154,14,274,12,"screenEdgeDistance"],[154,32,274,30],[154,35,274,33,"gestureDirectionInverted"],[154,59,274,57],[154,62,274,60,"axisLength"],[154,72,274,70],[154,76,274,74,"currentDragPosition"],[154,95,274,93],[154,98,274,96,"currentDragDistance"],[154,117,274,70],[154,118,274,57],[154,121,274,119,"currentDragPosition"],[154,140,274,138],[154,143,274,141,"currentDragDistance"],[154,162,274,6],[155,0,251,53],[155,38,279,10,"options"],[155,45,251,53],[155,46,278,8,"gestureResponseDistance"],[155,69,251,53],[156,0,251,53],[156,14,278,33,"userGestureResponseDistance"],[156,41,251,53],[156,79,278,63],[156,81,251,53],[157,0,280,6],[157,14,280,12,"gestureResponseDistance"],[157,37,280,35],[157,40,280,38,"isVertical"],[157,50,280,48],[157,53,280,51,"userGestureResponseDistance"],[157,80,280,78],[157,81,280,79,"vertical"],[157,89,280,51],[157,93,280,91,"GESTURE_RESPONSE_DISTANCE_VERTICAL"],[157,127,280,48],[157,130,280,128,"userGestureResponseDistance"],[157,157,280,155],[157,158,280,156,"horizontal"],[157,168,280,128],[157,172,280,170,"GESTURE_RESPONSE_DISTANCE_HORIZONTAL"],[157,208,280,6],[159,0,282,6],[159,14,282,10,"screenEdgeDistance"],[159,32,282,28],[159,35,282,31,"gestureResponseDistance"],[159,58,282,6],[159,60,282,56],[160,0,284,8],[160,19,284,15],[160,24,284,8],[161,0,285,7],[163,0,287,6],[163,14,287,12,"hasDraggedEnough"],[163,30,287,28],[163,33,287,31,"Math"],[163,37,287,35],[163,38,287,36,"abs"],[163,41,287,31],[163,42,287,40,"currentDragDistance"],[163,61,287,31],[163,65,287,63,"RESPOND_THRESHOLD"],[163,82,287,6],[164,0,289,6],[164,14,289,12,"isOnFirstCard"],[164,27,289,25],[164,30,289,28,"immediateIndex"],[164,44,289,42],[164,49,289,47],[164,50,289,6],[165,0,290,6],[165,14,290,12,"shouldSetResponder"],[165,32,290,30],[165,35,290,33,"hasDraggedEnough"],[165,51,290,49],[165,55,290,53,"axisHasBeenMeasured"],[165,74,290,33],[165,78,290,76],[165,79,290,77,"isOnFirstCard"],[165,92,290,6],[166,0,291,6],[166,17,291,13,"shouldSetResponder"],[166,35,291,6],[167,0,292,5],[167,9,227,38],[168,0,293,4,"onPanResponderMove"],[168,8,293,4,"onPanResponderMove"],[168,26,293,22],[168,28,293,24],[168,56,293,25,"event"],[168,61,293,24],[168,63,293,32,"gesture"],[168,70,293,24],[168,72,293,44],[169,0,293,44],[169,29,297,10],[169,35,297,15,"props"],[169,40,293,44],[170,0,293,44],[170,51,295,8,"transitionProps"],[170,66,293,44],[171,0,293,44],[171,14,295,27,"navigation"],[171,24,293,44],[171,49,295,27,"navigation"],[171,59,293,44],[172,0,293,44],[172,14,295,39,"position"],[172,22,293,44],[172,47,295,39,"position"],[172,55,293,44],[173,0,293,44],[173,14,295,49,"layout"],[173,20,293,44],[173,45,295,49,"layout"],[173,51,293,44],[174,0,293,44],[174,14,295,57,"scene"],[174,19,293,44],[174,44,295,57,"scene"],[174,49,293,44],[175,0,293,44],[175,14,296,8,"mode"],[175,18,293,44],[175,34,296,8,"mode"],[175,38,293,44],[176,0,293,44],[176,14,298,14,"index"],[176,19,293,44],[176,22,298,24,"navigation"],[176,32,298,34],[176,33,298,35,"state"],[176,38,293,44],[176,39,298,14,"index"],[176,44,293,44],[177,0,299,6],[177,14,299,12,"isVertical"],[177,24,299,22],[177,27,299,25,"mode"],[177,31,299,29],[177,36,299,34],[177,43,299,6],[178,0,293,44],[178,14,300,14,"options"],[178,21,293,44],[178,24,300,26,"scene"],[178,29,300,31],[178,30,300,32,"descriptor"],[178,40,293,44],[178,41,300,14,"options"],[178,48,293,44],[179,0,301,6],[179,14,301,12,"gestureDirection"],[179,30,301,28],[179,33,301,31,"options"],[179,40,301,38],[179,41,301,39,"gestureDirection"],[179,57,301,6],[180,0,303,6],[180,14,303,12,"gestureDirectionInverted"],[180,38,303,36],[180,41,303,39],[180,48,303,46,"gestureDirection"],[180,64,303,39],[180,69,303,67],[180,77,303,39],[180,80,303,78,"gestureDirection"],[180,96,303,94],[180,101,303,99],[180,111,303,39],[180,114,303,112,"I18nManager"],[180,139,303,124,"isRTL"],[180,144,303,6],[181,0,306,6],[181,14,306,12,"startValue"],[181,24,306,22],[181,27,306,25],[181,33,306,30,"_gestureStartValue"],[181,51,306,6],[182,0,307,6],[182,14,307,12,"axis"],[182,18,307,16],[182,21,307,19,"isVertical"],[182,31,307,29],[182,34,307,32],[182,38,307,29],[182,41,307,39],[182,45,307,6],[183,0,308,6],[183,14,308,12,"axisDistance"],[183,26,308,24],[183,29,308,27,"isVertical"],[183,39,308,37],[183,42,308,40,"layout"],[183,48,308,46],[183,49,308,47,"height"],[183,55,308,40],[183,56,308,54,"__getValue"],[183,66,308,40],[183,68,308,37],[183,71,308,69,"layout"],[183,77,308,75],[183,78,308,76,"width"],[183,83,308,69],[183,84,308,82,"__getValue"],[183,94,308,69],[183,96,308,6],[184,0,309,6],[184,14,309,12,"currentValue"],[184,26,309,24],[184,29,309,27,"axis"],[184,33,309,31],[184,38,309,36],[184,42,309,27],[184,46,309,44,"gestureDirectionInverted"],[184,70,309,27],[184,73,309,71,"startValue"],[184,83,309,81],[184,86,309,84,"gesture"],[184,93,309,91],[184,94,309,92,"axis"],[184,98,309,91],[184,99,309,84],[184,102,309,100,"axisDistance"],[184,114,309,27],[184,117,309,115,"startValue"],[184,127,309,125],[184,130,309,128,"gesture"],[184,137,309,135],[184,138,309,136,"axis"],[184,142,309,135],[184,143,309,128],[184,146,309,144,"axisDistance"],[184,158,309,6],[185,0,310,6],[185,14,310,12,"value"],[185,19,310,17],[185,22,310,20],[185,42,310,26,"index"],[185,47,310,31],[185,50,310,34],[185,51,310,20],[185,53,310,37,"currentValue"],[185,65,310,20],[185,67,310,51,"index"],[185,72,310,20],[185,73,310,6],[186,0,311,6,"position"],[186,10,311,6,"position"],[186,18,311,14],[186,19,311,15,"setValue"],[186,27,311,6],[186,28,311,24,"value"],[186,33,311,6],[187,0,312,5],[187,9,227,38],[188,0,313,4,"onPanResponderTerminationRequest"],[188,8,313,4,"onPanResponderTerminationRequest"],[188,40,313,36],[188,42,313,38],[189,0,313,38],[189,17,316,4],[189,22,313,38],[190,0,313,38],[190,9,227,38],[191,0,317,4,"onPanResponderRelease"],[191,8,317,4,"onPanResponderRelease"],[191,29,317,25],[191,31,317,27],[191,62,317,28,"event"],[191,67,317,27],[191,69,317,35,"gesture"],[191,76,317,27],[191,78,317,47],[192,0,317,47],[192,29,321,10],[192,35,321,15,"props"],[192,40,317,47],[193,0,317,47],[193,51,319,8,"transitionProps"],[193,66,317,47],[194,0,317,47],[194,14,319,27,"navigation"],[194,24,317,47],[194,49,319,27,"navigation"],[194,59,317,47],[195,0,317,47],[195,14,319,39,"position"],[195,22,317,47],[195,47,319,39,"position"],[195,55,317,47],[196,0,317,47],[196,14,319,49,"layout"],[196,20,317,47],[196,45,319,49,"layout"],[196,51,317,47],[197,0,317,47],[197,14,319,57,"scene"],[197,19,317,47],[197,44,319,57,"scene"],[197,49,317,47],[198,0,317,47],[198,14,320,8,"mode"],[198,18,317,47],[198,34,320,8,"mode"],[198,38,317,47],[199,0,317,47],[199,14,322,14,"index"],[199,19,317,47],[199,22,322,24,"navigation"],[199,32,322,34],[199,33,322,35,"state"],[199,38,317,47],[199,39,322,14,"index"],[199,44,317,47],[200,0,323,6],[200,14,323,12,"isVertical"],[200,24,323,22],[200,27,323,25,"mode"],[200,31,323,29],[200,36,323,34],[200,43,323,6],[201,0,317,47],[201,14,324,14,"options"],[201,21,317,47],[201,24,324,26,"scene"],[201,29,324,31],[201,30,324,32,"descriptor"],[201,40,317,47],[201,41,324,14,"options"],[201,48,317,47],[202,0,325,6],[202,14,325,12,"gestureDirection"],[202,30,325,28],[202,33,325,31,"options"],[202,40,325,38],[202,41,325,39,"gestureDirection"],[202,57,325,6],[203,0,327,6],[203,14,327,12,"gestureDirectionInverted"],[203,38,327,36],[203,41,327,39],[203,48,327,46,"gestureDirection"],[203,64,327,39],[203,69,327,67],[203,77,327,39],[203,80,327,78,"gestureDirection"],[203,96,327,94],[203,101,327,99],[203,111,327,39],[203,114,327,112,"I18nManager"],[203,139,327,124,"isRTL"],[203,144,327,6],[205,0,329,6],[205,14,329,10],[205,15,329,11],[205,21,329,16,"_isResponding"],[205,34,329,6],[205,36,329,31],[206,0,330,8],[207,0,331,7],[209,0,332,6],[209,16,332,11,"_isResponding"],[209,29,332,6],[209,32,332,27],[209,37,332,6],[210,0,334,6],[210,14,334,12,"immediateIndex"],[210,28,334,26],[210,31,334,29],[210,37,334,34,"_immediateIndex"],[210,52,334,29],[210,56,334,53],[210,60,334,29],[210,63,334,60,"index"],[210,68,334,29],[210,71,334,68],[210,77,334,73,"_immediateIndex"],[210,92,334,6],[211,0,337,6],[211,14,337,12,"axisDistance"],[211,26,337,24],[211,29,337,27,"isVertical"],[211,39,337,37],[211,42,337,40,"layout"],[211,48,337,46],[211,49,337,47,"height"],[211,55,337,40],[211,56,337,54,"__getValue"],[211,66,337,40],[211,68,337,37],[211,71,337,69,"layout"],[211,77,337,75],[211,78,337,76,"width"],[211,83,337,69],[211,84,337,82,"__getValue"],[211,94,337,69],[211,96,337,6],[212,0,338,6],[212,14,338,12,"movementDirection"],[212,31,338,29],[212,34,338,32,"gestureDirectionInverted"],[212,58,338,56],[212,61,338,59],[212,62,338,60],[212,63,338,56],[212,66,338,64],[212,67,338,6],[213,0,339,6],[213,14,339,12,"movedDistance"],[213,27,339,25],[213,30,339,28,"movementDirection"],[213,47,339,45],[213,50,339,48,"gesture"],[213,57,339,55],[213,58,339,56,"isVertical"],[213,68,339,66],[213,71,339,69],[213,75,339,66],[213,78,339,76],[213,82,339,55],[213,83,339,6],[214,0,340,6],[214,14,340,12,"gestureVelocity"],[214,29,340,27],[214,32,340,30,"movementDirection"],[214,49,340,47],[214,52,340,50,"gesture"],[214,59,340,57],[214,60,340,58,"isVertical"],[214,70,340,68],[214,73,340,71],[214,77,340,68],[214,80,340,78],[214,84,340,57],[214,85,340,6],[215,0,341,6],[215,14,341,12,"defaultVelocity"],[215,29,341,27],[215,32,341,30,"axisDistance"],[215,44,341,42],[215,47,341,45,"ANIMATION_DURATION"],[215,65,341,6],[216,0,342,6],[216,14,342,12,"velocity"],[216,22,342,20],[216,25,342,23,"Math"],[216,29,342,27],[216,30,342,28,"max"],[216,33,342,23],[216,34,342,32,"Math"],[216,38,342,36],[216,39,342,37,"abs"],[216,42,342,32],[216,43,342,41,"gestureVelocity"],[216,58,342,32],[216,59,342,23],[216,61,342,59,"defaultVelocity"],[216,76,342,23],[216,77,342,6],[217,0,343,6],[217,14,343,12,"resetDuration"],[217,27,343,25],[217,30,343,28,"gestureDirectionInverted"],[217,54,343,52],[217,57,343,55],[217,58,343,56,"axisDistance"],[217,70,343,68],[217,73,343,71,"movedDistance"],[217,86,343,55],[217,90,343,88,"velocity"],[217,98,343,52],[217,101,343,99,"movedDistance"],[217,114,343,112],[217,117,343,115,"velocity"],[217,125,343,6],[218,0,344,6],[218,14,344,12,"goBackDuration"],[218,28,344,26],[218,31,344,29,"gestureDirectionInverted"],[218,55,344,53],[218,58,344,56,"movedDistance"],[218,71,344,69],[218,74,344,72,"velocity"],[218,82,344,53],[218,85,344,83],[218,86,344,84,"axisDistance"],[218,98,344,96],[218,101,344,99,"movedDistance"],[218,114,344,83],[218,118,344,116,"velocity"],[218,126,344,6],[219,0,347,6,"position"],[219,10,347,6,"position"],[219,18,347,14],[219,19,347,15,"stopAnimation"],[219,32,347,6],[219,33,347,29],[219,43,347,29,"value"],[219,48,347,34],[219,50,347,38],[220,0,350,8],[220,16,350,12,"gestureVelocity"],[220,31,350,27],[220,34,350,30],[220,35,350,31],[220,38,350,8],[220,40,350,36],[221,0,351,10],[221,20,351,15,"props"],[221,25,351,10],[221,26,351,21,"onGestureCanceled"],[221,43,351,10],[221,47,351,42],[221,53,351,47,"props"],[221,58,351,42],[221,59,351,53,"onGestureCanceled"],[221,76,351,42],[221,78,351,10],[223,0,352,10],[223,20,352,15,"_reset"],[223,26,352,10],[223,27,352,22,"immediateIndex"],[223,41,352,10],[223,43,352,38,"resetDuration"],[223,56,352,10],[225,0,353,10],[226,0,354,9],[228,0,355,8],[228,16,355,12,"gestureVelocity"],[228,31,355,27],[228,34,355,30],[228,37,355,8],[228,39,355,35],[229,0,356,10],[229,20,356,15,"props"],[229,25,356,10],[229,26,356,21,"onGestureFinish"],[229,41,356,10],[229,45,356,40],[229,51,356,45,"props"],[229,56,356,40],[229,57,356,51,"onGestureFinish"],[229,72,356,40],[229,74,356,10],[231,0,357,10],[231,20,357,15,"_goBack"],[231,27,357,10],[231,28,357,23,"immediateIndex"],[231,42,357,10],[231,44,357,39,"goBackDuration"],[231,58,357,10],[233,0,358,10],[234,0,359,9],[236,0,363,8],[236,16,363,12,"value"],[236,21,363,17],[236,25,363,21,"index"],[236,30,363,26],[236,33,363,29,"POSITION_THRESHOLD"],[236,51,363,8],[236,53,363,49],[237,0,364,10],[237,20,364,15,"props"],[237,25,364,10],[237,26,364,21,"onGestureFinish"],[237,41,364,10],[237,45,364,40],[237,51,364,45,"props"],[237,56,364,40],[237,57,364,51,"onGestureFinish"],[237,72,364,40],[237,74,364,10],[239,0,365,10],[239,20,365,15,"_goBack"],[239,27,365,10],[239,28,365,23,"immediateIndex"],[239,42,365,10],[239,44,365,39,"goBackDuration"],[239,58,365,10],[240,0,366,9],[240,13,363,8],[240,19,366,15],[241,0,367,10],[241,20,367,15,"props"],[241,25,367,10],[241,26,367,21,"onGestureCanceled"],[241,43,367,10],[241,47,367,42],[241,53,367,47,"props"],[241,58,367,42],[241,59,367,53,"onGestureCanceled"],[241,76,367,42],[241,78,367,10],[243,0,368,10],[243,20,368,15,"_reset"],[243,26,368,10],[243,27,368,22,"immediateIndex"],[243,41,368,10],[243,43,368,38,"resetDuration"],[243,56,368,10],[244,0,369,9],[245,0,370,7],[245,11,347,6],[246,0,371,5],[247,0,227,38],[247,7,227,18],[247,8,98,21],[249,0,98,21],[249,12,374,2,"_onFloatingHeaderLayout"],[249,35,98,21],[249,38,374,28],[249,48,374,28,"e"],[249,49,374,29],[249,51,374,33],[250,0,375,4],[250,14,375,9,"setState"],[250,22,375,4],[250,23,375,18],[251,0,375,20,"floatingHeaderHeight"],[251,10,375,20,"floatingHeaderHeight"],[251,30,375,40],[251,32,375,42,"e"],[251,33,375,43],[251,34,375,44,"nativeEvent"],[251,45,375,42],[251,46,375,56,"layout"],[251,52,375,42],[251,53,375,63,"height"],[252,0,375,18],[252,9,375,4],[253,0,376,3],[253,7,98,21],[255,0,98,21],[255,12,486,2,"_getTransitionConfig"],[255,32,98,21],[255,35,486,25],[255,47,486,31],[256,0,487,4],[256,12,487,10,"isModal"],[256,19,487,17],[256,22,487,20],[256,28,487,25,"props"],[256,33,487,20],[256,34,487,31,"mode"],[256,38,487,20],[256,43,487,40],[256,50,487,4],[257,0,489,4],[257,15,489,11,"TransitionConfigs"],[257,51,489,29,"getTransitionConfig"],[257,70,489,11],[257,71,489,49],[257,77,489,54,"props"],[257,82,489,49],[257,83,489,60,"transitionConfig"],[257,99,489,11],[257,101,489,78],[257,107,489,83,"props"],[257,112,489,78],[257,113,489,89,"transitionProps"],[257,128,489,11],[257,130,489,106],[257,136,489,111,"props"],[257,141,489,106],[257,142,489,117,"lastTransitionProps"],[257,161,489,11],[257,163,489,138,"isModal"],[257,170,489,11],[257,171,489,4],[258,0,490,3],[258,7,98,21],[260,0,98,21],[260,12,492,2,"_renderCard"],[260,23,98,21],[260,26,492,16],[260,36,492,16,"scene"],[260,41,492,21],[260,43,492,25],[261,0,492,25],[261,36,493,35],[261,42,493,40,"_getTransitionConfig"],[261,62,493,35],[261,64,492,25],[262,0,492,25],[262,12,493,12,"screenInterpolator"],[262,30,492,25],[262,55,493,12,"screenInterpolator"],[262,73,492,25],[264,0,495,4],[264,12,495,10,"style"],[264,17,495,15],[264,20,495,18,"screenInterpolator"],[264,38,495,36],[264,42,495,40,"screenInterpolator"],[264,60,495,58],[264,79,495,64],[264,85,495,69,"props"],[264,90,495,64],[264,91,495,75,"transitionProps"],[264,106,495,58],[265,0,495,92,"scene"],[265,10,495,92,"scene"],[265,15,495,97],[265,17,495,92,"scene"],[266,0,495,58],[266,11,495,4],[267,0,492,25],[267,12,499,12,"options"],[267,19,492,25],[267,22,499,24,"scene"],[267,27,499,29],[267,28,499,30,"descriptor"],[267,38,492,25],[267,39,499,12,"options"],[267,46,492,25],[268,0,500,4],[268,12,500,10,"hasHeader"],[268,21,500,19],[268,24,500,22,"options"],[268,31,500,29],[268,32,500,30,"header"],[268,38,500,22],[268,43,500,41],[268,47,500,4],[270,0,501,4],[270,12,501,10,"headerMode"],[270,22,501,20],[270,25,501,23],[270,31,501,28,"_getHeaderMode"],[270,45,501,23],[270,47,501,4],[272,0,502,4],[272,12,502,8,"paddingTop"],[272,22,502,18],[272,25,502,21],[272,26,502,4],[274,0,503,4],[274,12,503,8,"hasHeader"],[274,21,503,17],[274,25,503,21,"headerMode"],[274,35,503,31],[274,40,503,36],[274,47,503,8],[274,51,503,47],[274,52,503,48,"options"],[274,59,503,55],[274,60,503,56,"headerTransparent"],[274,77,503,4],[274,79,503,75],[275,0,504,6,"paddingTop"],[275,10,504,6,"paddingTop"],[275,20,504,16],[275,23,504,19],[275,29,504,24,"state"],[275,34,504,19],[275,35,504,30,"floatingHeaderHeight"],[275,55,504,6],[276,0,505,5],[278,0,507,4],[278,15,507,11],[278,44,507,12],[278,66,507,11],[278,95,507,21],[278,101,507,26,"props"],[278,106,507,21],[278,107,507,32,"transitionProps"],[278,122,507,11],[279,0,507,49],[279,10,507,49],[279,13,507,52],[279,25,507,62,"scene"],[279,30,507,67],[279,31,507,68,"key"],[279,34,507,11],[280,0,507,75],[280,10,507,75],[280,21,507,86],[280,23,507,88],[280,29,507,93,"props"],[280,34,507,88],[280,35,507,99,"transparentCard"],[280,50,507,11],[281,0,507,116],[281,10,507,116],[281,15,507,121],[281,17,507,123],[281,18,507,124,"style"],[281,23,507,123],[281,25,507,131],[282,0,507,133,"paddingTop"],[282,12,507,133,"paddingTop"],[282,22,507,143],[282,24,507,133,"paddingTop"],[283,0,507,131],[283,11,507,123],[283,13,507,147],[283,19,507,152,"props"],[283,24,507,147],[283,25,507,158,"cardStyle"],[283,34,507,123],[283,35,507,11],[284,0,507,170],[284,10,507,170],[284,15,507,175],[284,17,507,177,"scene"],[284,22,507,11],[285,0,507,11],[286,0,507,11],[287,0,507,11],[288,0,507,11],[289,0,507,11],[289,12,508,9],[289,18,508,14,"_renderInnerScene"],[289,35,508,9],[289,36,508,32,"scene"],[289,41,508,9],[289,42,507,11],[289,43,507,4],[290,0,510,3],[290,7,98,21],[292,0,101,4],[292,12,101,9,"state"],[292,17,101,4],[292,20,101,17],[293,0,107,6,"floatingHeaderHeight"],[293,8,107,6,"floatingHeaderHeight"],[293,28,107,26],[293,30,107,28,"getDefaultHeaderHeight"],[293,52,107,50],[293,53,107,51,"props"],[293,58,107,56],[293,59,107,57,"isLandscape"],[293,70,107,50],[294,0,101,17],[294,7,101,4],[295,0,98,21],[296,0,109,3],[300,36,111,16,"scene"],[300,41],[300,43,111,23,"headerMode"],[300,53],[300,55,111,35],[301,0,111,35],[301,12,112,12,"options"],[301,19,111,35],[301,22,112,24,"scene"],[301,27,112,29],[301,28,112,30,"descriptor"],[301,38,111,35],[301,39,112,12,"options"],[301,46,111,35],[302,0,111,35],[302,12,113,12,"header"],[302,18,111,35],[302,21,113,23,"options"],[302,28,111,35],[302,29,113,12,"header"],[302,35,111,35],[304,0,115,4],[304,12,115,8,"__DEV__"],[304,19,115,15],[304,23,115,19],[304,30,115,26,"header"],[304,36,115,19],[304,41,115,37],[304,49,115,4],[304,51,115,47],[305,0,116,6],[305,16,116,12],[305,20,116,16,"Error"],[305,25,116,12],[305,55,116,48,"header"],[305,61,116,12],[305,143,116,6],[306,0,117,5],[308,0,119,4],[308,12,119,8,"header"],[308,18,119,14],[308,23,119,19],[308,27,119,8],[308,31,119,27,"headerMode"],[308,41,119,37],[308,46,119,42],[308,54,119,4],[308,56,119,52],[309,0,120,6],[309,17,120,13],[309,21,120,6],[310,0,121,5],[312,0,124,4],[312,12,124,8,"React"],[312,27,124,14,"isValidElement"],[312,41,124,8],[312,42,124,29,"header"],[312,48,124,8],[312,49,124,4],[312,51,124,38],[313,0,125,6],[313,17,125,13,"header"],[313,23,125,6],[314,0,126,5],[316,0,129,4],[316,12,129,10,"renderHeader"],[316,24,129,22],[316,27,129,25,"header"],[316,33,129,31],[316,37,129,36],[316,47,129,36,"props"],[316,52,129,41],[317,0,129,41],[317,17,129,45],[317,46,129,46],[317,61,129,45],[317,90,129,57,"props"],[317,95,129,45],[318,0,129,45],[319,0,129,45],[320,0,129,45],[321,0,129,45],[322,0,129,45],[322,13,129,41],[323,0,129,41],[323,9,129,4],[325,0,111,35],[325,37,136,8],[325,42,136,13,"_getTransitionConfig"],[325,62,136,8],[325,64,111,35],[326,0,111,35],[326,12,132,6,"headerLeftInterpolator"],[326,34,111,35],[326,60,132,6,"headerLeftInterpolator"],[326,82,111,35],[327,0,111,35],[327,12,133,6,"headerTitleInterpolator"],[327,35,111,35],[327,61,133,6,"headerTitleInterpolator"],[327,84,111,35],[328,0,111,35],[328,12,134,6,"headerRightInterpolator"],[328,35,111,35],[328,61,134,6,"headerRightInterpolator"],[328,84,111,35],[329,0,111,35],[329,12,135,6,"headerBackgroundInterpolator"],[329,40,111,35],[329,66,135,6,"headerBackgroundInterpolator"],[329,94,111,35],[331,0,111,35],[331,27,138,46],[331,32,138,51,"props"],[331,37,111,35],[332,0,111,35],[332,12,138,12,"transitionProps"],[332,27,111,35],[332,43,138,12,"transitionProps"],[332,58,111,35],[333,0,111,35],[333,12,138,32,"passProps"],[333,21,111,35],[334,0,140,4],[334,15,140,11],[334,44,140,12],[334,79,140,11],[335,0,140,31],[335,10,140,31],[335,15,140,36],[335,17,140,38,"scene"],[335,22,140,43],[335,23,140,44,"descriptor"],[335,33,140,38],[335,34,140,55,"navigation"],[335,44,140,11],[336,0,140,11],[337,0,140,11],[338,0,140,11],[339,0,140,11],[340,0,140,11],[340,11,141,9,"renderHeader"],[340,23,141,21],[340,42,142,11,"passProps"],[340,51,141,21],[340,57,143,11,"transitionProps"],[340,72,141,21],[341,0,144,8,"scene"],[341,10,144,8,"scene"],[341,15,144,13],[341,17,144,8,"scene"],[341,22,141,21],[342,0,145,8,"mode"],[342,10,145,8,"mode"],[342,14,145,12],[342,16,145,14,"headerMode"],[342,26,141,21],[343,0,146,8,"transitionPreset"],[343,10,146,8,"transitionPreset"],[343,26,146,24],[343,28,146,26],[343,33,146,31,"_getHeaderTransitionPreset"],[343,59,146,26],[343,61,141,21],[344,0,147,8,"layoutPreset"],[344,10,147,8,"layoutPreset"],[344,22,147,20],[344,24,147,22],[344,29,147,27,"_getHeaderLayoutPreset"],[344,51,147,22],[344,53,141,21],[345,0,148,8,"backTitleVisible"],[345,10,148,8,"backTitleVisible"],[345,26,148,24],[345,28,148,26],[345,33,148,31,"_getheaderBackTitleVisible"],[345,59,148,26],[345,61,141,21],[346,0,149,8,"leftInterpolator"],[346,10,149,8,"leftInterpolator"],[346,26,149,24],[346,28,149,26,"headerLeftInterpolator"],[346,50,141,21],[347,0,150,8,"titleInterpolator"],[347,10,150,8,"titleInterpolator"],[347,27,150,25],[347,29,150,27,"headerTitleInterpolator"],[347,52,141,21],[348,0,151,8,"rightInterpolator"],[348,10,151,8,"rightInterpolator"],[348,27,151,25],[348,29,151,27,"headerRightInterpolator"],[348,52,141,21],[349,0,152,8,"backgroundInterpolator"],[349,10,152,8,"backgroundInterpolator"],[349,32,152,30],[349,34,152,32,"headerBackgroundInterpolator"],[350,0,141,21],[350,11,140,11],[350,12,140,4],[351,0,155,3],[354,41,157,21,"props"],[354,46],[354,48,157,28],[355,0,165,4,"animatedSubscribeValue"],[355,8,165,4,"animatedSubscribeValue"],[355,30,165,26],[355,31,165,27,"props"],[355,36,165,32],[355,37,165,33,"transitionProps"],[355,52,165,27],[355,53,165,49,"layout"],[355,59,165,27],[355,60,165,56,"width"],[355,65,165,26],[355,66,165,4],[356,0,166,4,"animatedSubscribeValue"],[356,8,166,4,"animatedSubscribeValue"],[356,30,166,26],[356,31,166,27,"props"],[356,36,166,32],[356,37,166,33,"transitionProps"],[356,52,166,27],[356,53,166,49,"layout"],[356,59,166,27],[356,60,166,56,"height"],[356,66,166,26],[356,67,166,4],[357,0,167,4,"animatedSubscribeValue"],[357,8,167,4,"animatedSubscribeValue"],[357,30,167,26],[357,31,167,27,"props"],[357,36,167,32],[357,37,167,33,"transitionProps"],[357,52,167,27],[357,53,167,49,"position"],[357,61,167,26],[357,62,167,4],[358,0,168,3],[361,29,170,9,"resetToIndex"],[361,41],[361,43,170,23,"duration"],[361,51],[361,53,170,33],[362,0,171,4],[362,12,171,8,"Platform"],[362,34,171,17,"OS"],[362,36,171,8],[362,41,171,24],[362,46,171,8],[362,50,171,33],[362,109,171,4],[362,111,171,68],[363,0,172,6,"Animated"],[363,32,172,15,"spring"],[363,38,172,6],[363,39,172,22],[363,44,172,27,"props"],[363,49,172,22],[363,50,172,33,"transitionProps"],[363,65,172,22],[363,66,172,49,"position"],[363,74,172,6],[363,76,172,59],[364,0,173,8,"toValue"],[364,12,173,8,"toValue"],[364,19,173,15],[364,21,173,17,"resetToIndex"],[364,33,172,59],[365,0,174,8,"stiffness"],[365,12,174,8,"stiffness"],[365,21,174,17],[365,23,174,19],[365,27,172,59],[366,0,175,8,"damping"],[366,12,175,8,"damping"],[366,19,175,15],[366,21,175,17],[366,24,172,59],[367,0,176,8,"mass"],[367,12,176,8,"mass"],[367,16,176,12],[367,18,176,14],[367,19,172,59],[368,0,177,8,"useNativeDriver"],[368,12,177,8,"useNativeDriver"],[368,27,177,23],[368,29,177,25],[368,34,177,30,"props"],[368,39,177,25],[368,40,177,36,"transitionProps"],[368,55,177,25],[368,56,177,52,"position"],[368,64,177,25],[368,65,177,61,"__isNative"],[369,0,172,59],[369,11,172,6],[369,13,178,9,"start"],[369,18,172,6],[370,0,179,5],[370,9,171,4],[370,15,179,11],[371,0,180,6,"Animated"],[371,32,180,15,"timing"],[371,38,180,6],[371,39,180,22],[371,44,180,27,"props"],[371,49,180,22],[371,50,180,33,"transitionProps"],[371,65,180,22],[371,66,180,49,"position"],[371,74,180,6],[371,76,180,59],[372,0,181,8,"toValue"],[372,12,181,8,"toValue"],[372,19,181,15],[372,21,181,17,"resetToIndex"],[372,33,180,59],[373,0,182,8,"duration"],[373,12,182,8,"duration"],[373,20,182,16],[373,22,182,8,"duration"],[373,30,180,59],[374,0,183,8,"easing"],[374,12,183,8,"easing"],[374,18,183,14],[374,20,183,16,"EaseInOut"],[374,29,180,59],[375,0,184,8,"useNativeDriver"],[375,12,184,8,"useNativeDriver"],[375,27,184,23],[375,29,184,25],[375,34,184,30,"props"],[375,39,184,25],[375,40,184,36,"transitionProps"],[375,55,184,25],[375,56,184,52,"position"],[375,64,184,25],[375,65,184,61,"__isNative"],[376,0,180,59],[376,11,180,6],[376,13,185,9,"start"],[376,18,180,6],[377,0,186,5],[378,0,187,3],[381,30,189,10,"backFromIndex"],[381,43],[381,45,189,25,"duration"],[381,53],[381,55,189,35],[382,0,189,35],[384,0,189,35],[384,37,190,45],[384,42,190,50,"props"],[384,47,190,45],[384,48,190,56,"transitionProps"],[384,63,189,35],[385,0,189,35],[385,12,190,12,"navigation"],[385,22,189,35],[385,48,190,12,"navigation"],[385,58,189,35],[386,0,189,35],[386,12,190,24,"position"],[386,20,189,35],[386,46,190,24,"position"],[386,54,189,35],[387,0,189,35],[387,12,190,34,"scenes"],[387,18,189,35],[387,44,190,34,"scenes"],[387,50,189,35],[388,0,191,4],[388,12,191,10,"toValue"],[388,19,191,17],[388,22,191,20,"Math"],[388,26,191,24],[388,27,191,25,"max"],[388,30,191,20],[388,31,191,29,"backFromIndex"],[388,44,191,42],[388,47,191,45],[388,48,191,20],[388,50,191,48],[388,51,191,20],[388,52,191,4],[389,0,195,4],[389,13,195,9,"_immediateIndex"],[389,28,195,4],[389,31,195,27,"toValue"],[389,38,195,4],[391,0,197,4],[391,12,197,10,"onCompleteAnimation"],[391,31,197,29],[391,34,197,32],[391,43,197,10,"onCompleteAnimation"],[391,62,197,32],[391,65,197,38],[392,0,198,6],[392,10,198,6],[392,16,198,10],[392,17,198,11,"_immediateIndex"],[392,32,198,6],[392,35,198,29],[392,39,198,6],[393,0,199,6],[393,14,199,12,"backFromScene"],[393,27,199,25],[393,30,199,28,"scenes"],[393,36,199,34],[393,37,199,35,"find"],[393,41,199,28],[393,42,199,40],[393,52,199,40,"s"],[393,53,199,41],[394,0,199,41],[394,19,199,45,"s"],[394,20,199,46],[394,21,199,47,"index"],[394,26,199,45],[394,31,199,57,"toValue"],[394,38,199,64],[394,41,199,67],[394,42,199,41],[395,0,199,41],[395,11,199,28],[395,12,199,6],[397,0,200,6],[397,14,200,10],[397,15,200,11],[397,21,200,15],[397,22,200,16,"_isResponding"],[397,35,200,10],[397,39,200,33,"backFromScene"],[397,52,200,6],[397,54,200,48],[398,0,201,8,"navigation"],[398,12,201,8,"navigation"],[398,22,201,18],[398,23,201,19,"dispatch"],[398,31,201,8],[398,32,201,28,"NavigationActions"],[398,67,201,46,"back"],[398,71,201,28],[398,72,201,51],[399,0,202,10,"key"],[399,14,202,10,"key"],[399,17,202,13],[399,19,202,15,"backFromScene"],[399,32,202,28],[399,33,202,29,"route"],[399,38,202,15],[399,39,202,35,"key"],[399,42,201,51],[400,0,203,10,"immediate"],[400,14,203,10,"immediate"],[400,23,203,19],[400,25,203,21],[401,0,201,51],[401,13,201,28],[401,14,201,8],[402,0,205,8,"navigation"],[402,12,205,8,"navigation"],[402,22,205,18],[402,23,205,19,"dispatch"],[402,31,205,8],[402,32,205,28,"StackActions"],[402,62,205,41,"completeTransition"],[402,80,205,28],[402,82,205,8],[403,0,206,7],[404,0,207,5],[404,9,197,4],[406,0,209,4],[406,12,209,8,"Platform"],[406,34,209,17,"OS"],[406,36,209,8],[406,41,209,24],[406,46,209,8],[406,50,209,33],[406,109,209,4],[406,111,209,68],[407,0,210,6,"Animated"],[407,32,210,15,"spring"],[407,38,210,6],[407,39,210,22,"position"],[407,47,210,6],[407,49,210,32],[408,0,211,8,"toValue"],[408,12,211,8,"toValue"],[408,19,211,15],[408,21,211,8,"toValue"],[408,28,210,32],[409,0,212,8,"stiffness"],[409,12,212,8,"stiffness"],[409,21,212,17],[409,23,212,19],[409,27,210,32],[410,0,213,8,"damping"],[410,12,213,8,"damping"],[410,19,213,15],[410,21,213,17],[410,24,210,32],[411,0,214,8,"mass"],[411,12,214,8,"mass"],[411,16,214,12],[411,18,214,14],[411,19,210,32],[412,0,215,8,"useNativeDriver"],[412,12,215,8,"useNativeDriver"],[412,27,215,23],[412,29,215,25,"position"],[412,37,215,33],[412,38,215,34,"__isNative"],[413,0,210,32],[413,11,210,6],[413,13,216,9,"start"],[413,18,210,6],[413,19,216,15,"onCompleteAnimation"],[413,38,210,6],[414,0,217,5],[414,9,209,4],[414,15,217,11],[415,0,218,6,"Animated"],[415,32,218,15,"timing"],[415,38,218,6],[415,39,218,22,"position"],[415,47,218,6],[415,49,218,32],[416,0,219,8,"toValue"],[416,12,219,8,"toValue"],[416,19,219,15],[416,21,219,8,"toValue"],[416,28,218,32],[417,0,220,8,"duration"],[417,12,220,8,"duration"],[417,20,220,16],[417,22,220,8,"duration"],[417,30,218,32],[418,0,221,8,"easing"],[418,12,221,8,"easing"],[418,18,221,14],[418,20,221,16,"EaseInOut"],[418,29,218,32],[419,0,222,8,"useNativeDriver"],[419,12,222,8,"useNativeDriver"],[419,27,222,23],[419,29,222,25,"position"],[419,37,222,33],[419,38,222,34,"__isNative"],[420,0,218,32],[420,11,218,6],[420,13,223,9,"start"],[420,18,218,6],[420,19,223,15,"onCompleteAnimation"],[420,38,218,6],[421,0,224,5],[422,0,225,3],[425,31,378,11],[426,0,378,11],[428,0,379,4],[428,12,379,8,"floatingHeader"],[428,26,379,22],[428,29,379,25],[428,33,379,4],[430,0,380,4],[430,12,380,10,"headerMode"],[430,22,380,20],[430,25,380,23],[430,30,380,28,"_getHeaderMode"],[430,44,380,23],[430,46,380,4],[432,0,382,4],[432,12,382,8,"headerMode"],[432,22,382,18],[432,27,382,23],[432,34,382,4],[432,36,382,32],[433,0,382,32],[433,14,383,14,"scene"],[433,20,382,32],[433,23,383,24],[433,28,383,29,"props"],[433,33,383,24],[433,34,383,35,"transitionProps"],[433,49,382,32],[433,50,383,14,"scene"],[433,55,382,32],[434,0,384,6,"floatingHeader"],[434,10,384,6,"floatingHeader"],[434,24,384,20],[434,27,384,23],[434,56,384,24],[434,73,384,23],[435,0,384,29],[435,12,384,29],[435,17,384,34],[435,19,384,36,"styles"],[435,25,384,42],[435,26,384,43,"floatingHeader"],[435,40,384,23],[436,0,384,59],[436,12,384,59],[436,25,384,72],[436,27,384,73],[436,37,384,23],[437,0,384,84],[437,12,384,84],[437,20,384,92],[437,22,384,94],[437,27,384,99,"_onFloatingHeaderLayout"],[437,50,384,23],[438,0,384,23],[439,0,384,23],[440,0,384,23],[441,0,384,23],[442,0,384,23],[442,13,385,11],[442,18,385,16,"_renderHeader"],[442,31,385,11],[442,32,385,30,"scene"],[442,38,385,11],[442,40,385,37,"headerMode"],[442,50,385,11],[442,51,384,23],[442,52,384,6],[443,0,387,5],[445,0,378,11],[445,37,390,8],[445,42,390,13,"props"],[445,47,378,11],[445,48,389,6,"transitionProps"],[445,63,378,11],[446,0,378,11],[446,12,389,25,"scene"],[446,17,378,11],[446,43,389,25,"scene"],[446,48,378,11],[447,0,378,11],[447,12,389,32,"scenes"],[447,18,378,11],[447,44,389,32,"scenes"],[447,50,378,11],[448,0,378,11],[448,12,391,12,"options"],[448,19,378,11],[448,22,391,24,"scene"],[448,27,391,29],[448,28,391,30,"descriptor"],[448,38,378,11],[448,39,391,12,"options"],[448,46,378,11],[449,0,393,4],[449,12,393,10,"gesturesEnabled"],[449,27,393,25],[449,30,393,28],[449,37,393,35,"options"],[449,44,393,42],[449,45,393,43,"gesturesEnabled"],[449,60,393,28],[449,65,393,63],[449,74,393,28],[449,77,393,75,"options"],[449,84,393,82],[449,85,393,83,"gesturesEnabled"],[449,100,393,28],[449,103,393,101,"Platform"],[449,125,393,110,"OS"],[449,127,393,101],[449,132,393,117],[449,137,393,4],[450,0,395,4],[450,12,395,10,"responder"],[450,21,395,19],[450,24,395,22],[450,25,395,23,"gesturesEnabled"],[450,40,395,22],[450,43,395,41],[450,47,395,22],[450,50,395,48],[450,55,395,53,"_panResponder"],[450,68,395,4],[451,0,397,4],[451,12,397,10,"handlers"],[451,20,397,18],[451,23,397,21,"gesturesEnabled"],[451,38,397,36],[451,41,397,39,"responder"],[451,50,397,48],[451,51,397,49,"panHandlers"],[451,62,397,36],[451,65,397,63],[451,67,397,4],[452,0,398,4],[452,12,398,10,"containerStyle"],[452,26,398,24],[452,29,398,27],[452,30,398,28,"styles"],[452,36,398,34],[452,37,398,35,"container"],[452,46,398,27],[452,48,398,46],[452,53,398,51,"_getTransitionConfig"],[452,73,398,46],[452,76,398,74,"containerStyle"],[452,90,398,27],[452,91,398,4],[453,0,400,4],[453,15,400,11],[453,44,400,12],[453,61,400,11],[453,90,400,21,"handlers"],[453,98,400,11],[454,0,400,31],[454,10,400,31],[454,15,400,36],[454,17,400,38,"containerStyle"],[454,31,400,11],[455,0,400,11],[456,0,400,11],[457,0,400,11],[458,0,400,11],[459,0,400,11],[459,12,401,8],[459,41,401,9],[459,76,401,8],[460,0,401,25],[460,10,401,25],[460,15,401,30],[460,17,401,32,"styles"],[460,23,401,38],[460,24,401,39,"scenes"],[460,30,401,8],[461,0,401,8],[462,0,401,8],[463,0,401,8],[464,0,401,8],[465,0,401,8],[465,11,402,11,"scenes"],[465,17,402,17],[465,18,402,18,"map"],[465,21,402,11],[465,22,402,22],[465,32,402,22,"s"],[465,33,402,23],[466,0,402,23],[466,17,402,27],[466,23,402,31],[466,24,402,32,"_renderCard"],[466,35,402,27],[466,36,402,44,"s"],[466,37,402,27],[466,38,402,23],[467,0,402,23],[467,9,402,11],[467,10,401,8],[467,11,400,11],[467,13,404,9,"floatingHeader"],[467,27,400,11],[467,28,400,4],[468,0,406,3],[471,39,408,19],[472,0,409,4],[472,12,409,8],[472,17,409,13,"props"],[472,22,409,8],[472,23,409,19,"headerMode"],[472,33,409,4],[472,35,409,31],[473,0,410,6],[473,17,410,13],[473,22,410,18,"props"],[473,27,410,13],[473,28,410,24,"headerMode"],[473,38,410,6],[474,0,411,5],[476,0,412,4],[476,12,412,8,"Platform"],[476,34,412,17,"OS"],[476,36,412,8],[476,41,412,24],[476,50,412,8],[476,54,412,37],[476,59,412,42,"props"],[476,64,412,37],[476,65,412,48,"mode"],[476,69,412,37],[476,74,412,57],[476,81,412,4],[476,83,412,66],[477,0,413,6],[477,17,413,13],[477,25,413,6],[478,0,414,5],[480,0,415,4],[480,15,415,11],[480,22,415,4],[481,0,416,3],[484,47,418,27],[485,0,418,27],[485,12,419,12,"headerLayoutPreset"],[485,30,418,27],[485,33,419,35],[485,38,419,40,"props"],[485,43,418,27],[485,44,419,12,"headerLayoutPreset"],[485,62,418,27],[487,0,420,4],[487,12,420,8,"headerLayoutPreset"],[487,30,420,4],[487,32,420,28],[488,0,421,6],[488,14,421,10,"__DEV__"],[488,21,421,6],[488,23,421,19],[489,0,422,8],[489,16,422,12],[489,21,422,17,"_getHeaderTransitionPreset"],[489,47,422,12],[489,54,422,50],[489,61,422,12],[489,65,422,61,"headerLayoutPreset"],[489,83,422,79],[489,88,422,84],[489,94,422,12],[489,98,422,94,"Platform"],[489,120,422,103,"OS"],[489,122,422,94],[489,127,422,110],[489,132,422,8],[489,134,422,117],[490,0,423,10,"console"],[490,14,423,10,"console"],[490,21,423,17],[490,22,423,18,"warn"],[490,26,423,10],[491,0,424,9],[492,0,425,7],[494,0,426,6],[494,14,426,10,"HEADER_LAYOUT_PRESET_VALUES"],[494,41,426,37],[494,42,426,38,"includes"],[494,50,426,10],[494,51,426,47,"headerLayoutPreset"],[494,69,426,10],[494,70,426,6],[494,72,426,68],[495,0,427,8],[495,19,427,15,"headerLayoutPreset"],[495,37,427,8],[496,0,428,7],[498,0,430,6],[498,14,430,10,"__DEV__"],[498,21,430,6],[498,23,430,19],[499,0,431,8,"console"],[499,12,431,8,"console"],[499,19,431,15],[499,20,431,16,"error"],[499,25,431,8],[499,102,431,96,"HEADER_LAYOUT_PRESET_VALUES"],[499,129,431,123],[499,130,431,124,"join"],[499,134,431,96],[499,135,431,129],[499,139,431,96],[499,140,431,8],[499,162,431,151,"JSON"],[499,166,431,155],[499,167,431,156,"stringify"],[499,176,431,151],[499,177,431,166,"headerLayoutPreset"],[499,195,431,151],[499,196,431,8],[500,0,432,7],[501,0,433,5],[503,0,435,4],[503,12,435,8,"Platform"],[503,34,435,17,"OS"],[503,36,435,8],[503,41,435,24],[503,50,435,4],[503,52,435,35],[504,0,436,6],[504,17,436,13],[504,23,436,6],[505,0,437,5],[505,9,435,4],[505,15,437,11],[506,0,438,6],[506,17,438,13],[506,25,438,6],[507,0,439,5],[508,0,440,3],[511,51,442,31],[512,0,445,4],[512,12,445,8,"Platform"],[512,34,445,17,"OS"],[512,36,445,8],[512,41,445,24],[512,50,445,8],[512,54,445,37],[512,59,445,42,"_getHeaderMode"],[512,73,445,37],[512,80,445,63],[512,88,445,4],[512,90,445,73],[513,0,446,6],[513,17,446,13],[513,32,446,6],[514,0,447,5],[516,0,442,31],[516,12,449,12,"headerTransitionPreset"],[516,34,442,31],[516,37,449,39],[516,42,449,44,"props"],[516,47,442,31],[516,48,449,12,"headerTransitionPreset"],[516,70,442,31],[518,0,450,4],[518,12,450,8,"headerTransitionPreset"],[518,34,450,4],[518,36,450,32],[519,0,451,6],[519,14,451,10,"HEADER_TRANSITION_PRESET_VALUES"],[519,45,451,41],[519,46,451,42,"includes"],[519,54,451,10],[519,55,451,51,"headerTransitionPreset"],[519,77,451,10],[519,78,451,6],[519,80,451,76],[520,0,452,8],[520,19,452,15,"headerTransitionPreset"],[520,41,452,8],[521,0,453,7],[523,0,455,6],[523,14,455,10,"__DEV__"],[523,21,455,6],[523,23,455,19],[524,0,456,8,"console"],[524,12,456,8,"console"],[524,19,456,15],[524,20,456,16,"error"],[524,25,456,8],[524,106,456,100,"HEADER_TRANSITION_PRESET_VALUES"],[524,137,456,131],[524,138,456,132,"join"],[524,142,456,100],[524,143,456,137],[524,147,456,100],[524,148,456,8],[524,170,456,159,"JSON"],[524,174,456,163],[524,175,456,164,"stringify"],[524,184,456,159],[524,185,456,174,"headerTransitionPreset"],[524,207,456,159],[524,208,456,8],[525,0,457,7],[526,0,458,5],[528,0,460,4],[528,15,460,11],[528,30,460,4],[529,0,461,3],[532,51,463,31],[533,0,463,31],[533,12,464,12,"headerBackTitleVisible"],[533,34,463,31],[533,37,464,39],[533,42,464,44,"props"],[533,47,463,31],[533,48,464,12,"headerBackTitleVisible"],[533,70,463,31],[534,0,466,4],[534,15,466,11,"headerBackTitleVisible"],[534,37,466,4],[535,0,467,3],[538,40,469,20,"scene"],[538,45],[538,47,469,27],[539,0,469,27],[539,32,470,41,"scene"],[539,37,470,46],[539,38,470,47,"descriptor"],[539,48,469,27],[540,0,469,27],[540,12,470,12,"navigation"],[540,22,469,27],[540,43,470,12,"navigation"],[540,53,469,27],[541,0,469,27],[541,12,470,24,"getComponent"],[541,24,469,27],[541,45,470,24,"getComponent"],[541,57,469,27],[542,0,471,4],[542,12,471,10,"SceneComponent"],[542,26,471,24],[542,29,471,27,"getComponent"],[542,41,471,39],[542,43,471,4],[543,0,469,27],[543,12,473,12,"screenProps"],[543,23,469,27],[543,26,473,28],[543,31,473,33,"props"],[543,36,469,27],[543,37,473,12,"screenProps"],[543,48,469,27],[545,0,474,4],[545,12,474,10,"headerMode"],[545,22,474,20],[545,25,474,23],[545,30,474,28,"_getHeaderMode"],[545,44,474,23],[545,46,474,4],[547,0,475,4],[547,12,475,8,"headerMode"],[547,22,475,18],[547,27,475,23],[547,35,475,4],[547,37,475,33],[548,0,476,6],[548,17,476,13],[548,46,476,14],[548,63,476,13],[549,0,476,19],[549,12,476,19],[549,17,476,24],[549,19,476,26,"styles"],[549,25,476,32],[549,26,476,33,"container"],[549,35,476,13],[550,0,476,13],[551,0,476,13],[552,0,476,13],[553,0,476,13],[554,0,476,13],[554,13,477,10],[554,42,477,11],[554,59,477,10],[555,0,477,16],[555,12,477,16],[555,17,477,21],[555,19,477,23,"styles"],[555,25,477,29],[555,26,477,30,"scenes"],[555,32,477,10],[556,0,477,10],[557,0,477,10],[558,0,477,10],[559,0,477,10],[560,0,477,10],[560,13,478,12],[560,42,478,13],[560,68,478,12],[561,0,478,23],[561,12,478,23],[561,23,478,34],[561,25,478,36,"screenProps"],[561,36,478,12],[562,0,478,49],[562,12,478,49],[562,22,478,59],[562,24,478,61,"navigation"],[562,34,478,12],[563,0,478,73],[563,12,478,73],[563,21,478,82],[563,23,478,84,"SceneComponent"],[563,37,478,12],[564,0,478,12],[565,0,478,12],[566,0,478,12],[567,0,478,12],[568,0,478,12],[568,12,477,10],[568,13,476,13],[568,15,480,11],[568,20,480,16,"_renderHeader"],[568,33,480,11],[568,34,480,30,"scene"],[568,39,480,11],[568,41,480,37,"headerMode"],[568,51,480,11],[568,52,476,13],[568,53,476,6],[569,0,482,5],[571,0,483,4],[571,15,483,11],[571,44,483,12],[571,70,483,11],[572,0,483,22],[572,10,483,22],[572,21,483,33],[572,23,483,35,"screenProps"],[572,34,483,11],[573,0,483,48],[573,10,483,48],[573,20,483,58],[573,22,483,60,"navigation"],[573,32,483,11],[574,0,483,72],[574,10,483,72],[574,19,483,81],[574,21,483,83,"SceneComponent"],[574,35,483,11],[575,0,483,11],[576,0,483,11],[577,0,483,11],[578,0,483,11],[579,0,483,11],[579,10,483,4],[580,0,484,3],[583,4,77,30,"React"],[583,19,77,36,"Component"],[583,28],[585,0,513,0],[585,6,513,6,"styles"],[585,12,513,12],[585,15,513,15,"StyleSheet"],[585,39,513,26,"create"],[585,45,513,15],[585,46,513,33],[586,0,514,2,"container"],[586,4,514,2,"container"],[586,13,514,11],[586,15,514,13],[587,0,515,4,"flex"],[587,6,515,4,"flex"],[587,10,515,8],[587,12,515,10],[587,13,514,13],[588,0,520,4,"flexDirection"],[588,6,520,4,"flexDirection"],[588,19,520,17],[588,21,520,19],[588,37,514,13],[589,0,521,4,"overflow"],[589,6,521,4,"overflow"],[589,14,521,12],[589,16,521,14],[590,0,514,13],[590,5,513,33],[591,0,523,2,"scenes"],[591,4,523,2,"scenes"],[591,10,523,8],[591,12,523,10],[592,0,524,4,"flex"],[592,6,524,4,"flex"],[592,10,524,8],[592,12,524,10],[593,0,523,10],[593,5,513,33],[594,0,526,2,"floatingHeader"],[594,4,526,2,"floatingHeader"],[594,18,526,16],[594,20,526,18],[595,0,527,4,"position"],[595,6,527,4,"position"],[595,14,527,12],[595,16,527,14],[595,26,526,18],[596,0,528,4,"left"],[596,6,528,4,"left"],[596,10,528,8],[596,12,528,10],[596,13,526,18],[597,0,529,4,"top"],[597,6,529,4,"top"],[597,9,529,7],[597,11,529,9],[597,12,526,18],[598,0,530,4,"right"],[598,6,530,4,"right"],[598,11,530,9],[598,13,530,11],[599,0,526,18],[600,0,513,33],[600,3,513,15],[600,4,513,0],[602,17,534,15],[602,55,534,31,"StackViewLayout"],[602,70,534,15],[602,71]],"functionMap":{"names":["<global>","emptyFunction","animatedSubscribeValue","getDefaultHeaderHeight","StackViewLayout","constructor","_renderHeader","<anonymous>","_animatedSubscribe","_reset","_goBack","onCompleteAnimation","scenes.find$argument_0","PanResponder.create$argument_0.onPanResponderTerminate","PanResponder.create$argument_0.onPanResponderGrant","position.stopAnimation$argument_0","PanResponder.create$argument_0.onMoveShouldSetPanResponder","PanResponder.create$argument_0.onPanResponderMove","PanResponder.create$argument_0.onPanResponderTerminationRequest","PanResponder.create$argument_0.onPanResponderRelease","_onFloatingHeaderLayout","render","scenes.map$argument_0","_getHeaderMode","_getHeaderLayoutPreset","_getHeaderTransitionPreset","_getheaderBackTitleVisible","_renderInnerScene","_getTransitionConfig","_renderCard"],"mappings":"AAA;sBCa,QD;+BEwC;CFO;+BGE;CHY;AIE;ECqB;GDW;EEE;oCCkB,8BD;GF0B;EIE;GJW;EKE;GLiB;EME;gCCQ;wCCE,4BD;KDQ;GNkB;6BSG;KTM;yBUC;6BCU;ODG;KVE;iCYC;KZyC;wBaC;KbmB;sCcC;SdG;2BeC;6BJ8B;OIuB;KfC;4BgBG;GhBE;EiBE;sBCwB,wBD;GjBI;EmBE;GnBQ;EoBE;GpBsB;EqBE;GrBmB;EsBE;GtBI;EuBE;GvBe;yBwBE;GxBI;gByBE;GzBkB;CJC"}},"type":"js/module"}]}