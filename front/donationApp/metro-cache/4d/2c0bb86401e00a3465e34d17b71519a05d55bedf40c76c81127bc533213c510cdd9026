{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"react-native-tab-view","data":{"isAsync":false}},{"name":"./TabBarIcon","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/extends\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[10], \"react-native\");\n\n  var _reactNativeTabView = _$$_REQUIRE(_dependencyMap[11], \"react-native-tab-view\");\n\n  var _TabBarIcon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"./TabBarIcon\"));\n\n  var _jsxFileName = \"/home/desenv/workspace/nodes/doacoes/front/donationApp/node_modules/react-navigation-deprecated-tab-navigator/src/views/TabBarTop.js\";\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var TabBarTop = function (_React$PureComponent) {\n    (0, _inherits2.default)(TabBarTop, _React$PureComponent);\n\n    function TabBarTop() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, TabBarTop);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(TabBarTop)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n      _this._renderLabel = function (scene) {\n        var _this$props = _this.props,\n            position = _this$props.position,\n            tabBarPosition = _this$props.tabBarPosition,\n            navigation = _this$props.navigation,\n            activeTintColor = _this$props.activeTintColor,\n            inactiveTintColor = _this$props.inactiveTintColor,\n            showLabel = _this$props.showLabel,\n            upperCaseLabel = _this$props.upperCaseLabel,\n            labelStyle = _this$props.labelStyle,\n            allowFontScaling = _this$props.allowFontScaling;\n\n        if (showLabel === false) {\n          return null;\n        }\n\n        var index = scene.index;\n        var routes = navigation.state.routes;\n        var inputRange = [-1].concat((0, _toConsumableArray2.default)(routes.map(function (x, i) {\n          return i;\n        })));\n        var outputRange = inputRange.map(function (inputIndex) {\n          return inputIndex === index ? activeTintColor : inactiveTintColor;\n        });\n        var color = position.interpolate({\n          inputRange: inputRange,\n          outputRange: outputRange\n        });\n        var tintColor = scene.focused ? activeTintColor : inactiveTintColor;\n\n        var label = _this.props.getLabel(_objectSpread({}, scene, {\n          tintColor: tintColor\n        }));\n\n        if (typeof label === 'string') {\n          return _react.default.createElement(_reactNative.Animated.Text, {\n            style: [styles.label, {\n              color: color\n            }, labelStyle],\n            allowFontScaling: allowFontScaling,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            }\n          }, upperCaseLabel ? label.toUpperCase() : label);\n        }\n\n        if (typeof label === 'function') {\n          return label(_objectSpread({}, scene, {\n            tintColor: tintColor\n          }));\n        }\n\n        return label;\n      };\n\n      _this._renderIcon = function (scene) {\n        var _this$props2 = _this.props,\n            position = _this$props2.position,\n            navigation = _this$props2.navigation,\n            activeTintColor = _this$props2.activeTintColor,\n            inactiveTintColor = _this$props2.inactiveTintColor,\n            renderIcon = _this$props2.renderIcon,\n            showIcon = _this$props2.showIcon,\n            iconStyle = _this$props2.iconStyle;\n\n        if (showIcon === false) {\n          return null;\n        }\n\n        return _react.default.createElement(_TabBarIcon.default, {\n          position: position,\n          navigation: navigation,\n          activeTintColor: activeTintColor,\n          inactiveTintColor: inactiveTintColor,\n          renderIcon: renderIcon,\n          scene: scene,\n          style: [styles.icon, iconStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          }\n        });\n      };\n\n      _this._handleOnPress = function (scene) {\n        var _this$props3 = _this.props,\n            getOnPress = _this$props3.getOnPress,\n            jumpToIndex = _this$props3.jumpToIndex,\n            navigation = _this$props3.navigation;\n        var previousScene = navigation.state.routes[navigation.state.index];\n        var onPress = getOnPress(previousScene, scene);\n\n        if (onPress) {\n          onPress({\n            previousScene: previousScene,\n            scene: scene,\n            jumpToIndex: jumpToIndex,\n            defaultHandler: jumpToIndex\n          });\n        } else {\n          jumpToIndex(scene.index);\n        }\n      };\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(TabBarTop, [{\n      key: \"render\",\n      value: function render() {\n        var props = this.props;\n        return _react.default.createElement(_reactNativeTabView.TabBar, (0, _extends2.default)({}, props, {\n          onTabPress: this._handleOnPress,\n          jumpToIndex: function jumpToIndex() {},\n          renderIcon: this._renderIcon,\n          renderLabel: this._renderLabel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          }\n        }));\n      }\n    }]);\n    return TabBarTop;\n  }(_react.default.PureComponent);\n\n  exports.default = TabBarTop;\n  TabBarTop.defaultProps = {\n    activeTintColor: '#fff',\n    inactiveTintColor: '#fff',\n    showIcon: false,\n    showLabel: true,\n    upperCaseLabel: true,\n    allowFontScaling: true\n  };\n\n  var styles = _reactNative.StyleSheet.create({\n    icon: {\n      height: 24,\n      width: 24\n    },\n    label: {\n      textAlign: 'center',\n      fontSize: 13,\n      margin: 8,\n      backgroundColor: 'transparent'\n    }\n  });\n});","lineCount":204,"map":[[25,0,1,0],[27,0,2,0],[29,0,3,0],[31,0,4,0],[39,6,6,21,"TabBarTop"],[39,15],[55,12,16,2,"_renderLabel"],[55,24],[55,27,16,17],[55,37,16,17,"scene"],[55,42,16,22],[55,44,16,26],[56,0,16,26],[56,26,27,8],[56,32,27,13,"props"],[56,37,16,26],[57,0,16,26],[57,12,18,6,"position"],[57,20,16,26],[57,35,18,6,"position"],[57,43,16,26],[58,0,16,26],[58,12,19,6,"tabBarPosition"],[58,26,16,26],[58,41,19,6,"tabBarPosition"],[58,55,16,26],[59,0,16,26],[59,12,20,6,"navigation"],[59,22,16,26],[59,37,20,6,"navigation"],[59,47,16,26],[60,0,16,26],[60,12,21,6,"activeTintColor"],[60,27,16,26],[60,42,21,6,"activeTintColor"],[60,57,16,26],[61,0,16,26],[61,12,22,6,"inactiveTintColor"],[61,29,16,26],[61,44,22,6,"inactiveTintColor"],[61,61,16,26],[62,0,16,26],[62,12,23,6,"showLabel"],[62,21,16,26],[62,36,23,6,"showLabel"],[62,45,16,26],[63,0,16,26],[63,12,24,6,"upperCaseLabel"],[63,26,16,26],[63,41,24,6,"upperCaseLabel"],[63,55,16,26],[64,0,16,26],[64,12,25,6,"labelStyle"],[64,22,16,26],[64,37,25,6,"labelStyle"],[64,47,16,26],[65,0,16,26],[65,12,26,6,"allowFontScaling"],[65,28,16,26],[65,43,26,6,"allowFontScaling"],[65,59,16,26],[67,0,28,4],[67,12,28,8,"showLabel"],[67,21,28,17],[67,26,28,22],[67,31,28,4],[67,33,28,29],[68,0,29,6],[68,17,29,13],[68,21,29,6],[69,0,30,5],[71,0,16,26],[71,12,31,12,"index"],[71,17,16,26],[71,20,31,22,"scene"],[71,25,16,26],[71,26,31,12,"index"],[71,31,16,26],[72,0,16,26],[72,12,32,12,"routes"],[72,18,16,26],[72,21,32,23,"navigation"],[72,31,32,33],[72,32,32,34,"state"],[72,37,16,26],[72,38,32,12,"routes"],[72,44,16,26],[73,0,34,4],[73,12,34,10,"inputRange"],[73,22,34,20],[73,26,34,24],[73,27,34,25],[73,28,34,20],[73,70,34,31,"routes"],[73,76,34,37],[73,77,34,38,"map"],[73,80,34,31],[73,81,34,42],[73,91,34,43,"x"],[73,92,34,42],[73,94,34,46,"i"],[73,95,34,42],[74,0,34,42],[74,17,34,52,"i"],[74,18,34,42],[75,0,34,42],[75,9,34,31],[75,10,34,20],[75,12,34,4],[76,0,35,4],[76,12,35,10,"outputRange"],[76,23,35,21],[76,26,35,24,"inputRange"],[76,36,35,34],[76,37,35,35,"map"],[76,40,35,24],[76,41,36,6],[76,51,36,6,"inputIndex"],[76,61,36,16],[77,0,36,16],[77,17,36,21,"inputIndex"],[77,27,36,31],[77,32,36,36,"index"],[77,37,36,21],[77,40,36,44,"activeTintColor"],[77,55,36,21],[77,58,36,62,"inactiveTintColor"],[77,75,36,16],[78,0,36,16],[78,9,35,24],[78,10,35,4],[79,0,38,4],[79,12,38,10,"color"],[79,17,38,15],[79,20,38,18,"position"],[79,28,38,26],[79,29,38,27,"interpolate"],[79,40,38,18],[79,41,38,39],[80,0,39,6,"inputRange"],[80,10,39,6,"inputRange"],[80,20,39,16],[80,22,39,6,"inputRange"],[80,32,38,39],[81,0,40,6,"outputRange"],[81,10,40,6,"outputRange"],[81,21,40,17],[81,23,40,19,"outputRange"],[82,0,38,39],[82,9,38,18],[82,10,38,4],[83,0,43,4],[83,12,43,10,"tintColor"],[83,21,43,19],[83,24,43,22,"scene"],[83,29,43,27],[83,30,43,28,"focused"],[83,37,43,22],[83,40,43,38,"activeTintColor"],[83,55,43,22],[83,58,43,56,"inactiveTintColor"],[83,75,43,4],[85,0,44,4],[85,12,44,10,"label"],[85,17,44,15],[85,20,44,18],[85,26,44,23,"props"],[85,31,44,18],[85,32,44,29,"getLabel"],[85,40,44,18],[85,59,44,43,"scene"],[85,64,44,18],[86,0,44,50,"tintColor"],[86,10,44,50,"tintColor"],[86,19,44,59],[86,21,44,50,"tintColor"],[87,0,44,18],[87,11,44,4],[89,0,45,4],[89,12,45,8],[89,19,45,15,"label"],[89,24,45,8],[89,29,45,25],[89,37,45,4],[89,39,45,35],[90,0,46,6],[90,17,47,8],[90,46,47,9],[90,67,47,8],[90,68,47,18],[90,72,47,8],[91,0,48,10],[91,12,48,10],[91,17,48,15],[91,19,48,17],[91,20,48,18,"styles"],[91,26,48,24],[91,27,48,25,"label"],[91,32,48,17],[91,34,48,32],[92,0,48,34,"color"],[92,14,48,34,"color"],[92,19,48,39],[92,21,48,34,"color"],[93,0,48,32],[93,13,48,17],[93,15,48,43,"labelStyle"],[93,25,48,17],[93,26,47,8],[94,0,49,10],[94,12,49,10],[94,28,49,26],[94,30,49,28,"allowFontScaling"],[94,46,47,8],[95,0,47,8],[96,0,47,8],[97,0,47,8],[98,0,47,8],[99,0,47,8],[99,13,50,11,"upperCaseLabel"],[99,27,50,25],[99,30,50,28,"label"],[99,35,50,33],[99,36,50,34,"toUpperCase"],[99,47,50,28],[99,49,50,25],[99,52,50,50,"label"],[99,57,47,8],[99,58,46,6],[100,0,53,5],[102,0,54,4],[102,12,54,8],[102,19,54,15,"label"],[102,24,54,8],[102,29,54,25],[102,39,54,4],[102,41,54,37],[103,0,55,6],[103,17,55,13,"label"],[103,22,55,18],[103,41,55,24,"scene"],[103,46,55,18],[104,0,55,31,"tintColor"],[104,12,55,31,"tintColor"],[104,21,55,40],[104,23,55,31,"tintColor"],[105,0,55,18],[105,13,55,6],[106,0,56,5],[108,0,58,4],[108,15,58,11,"label"],[108,20,58,4],[109,0,59,3],[109,7],[111,12,61,2,"_renderIcon"],[111,23],[111,26,61,16],[111,36,61,16,"scene"],[111,41,61,21],[111,43,61,25],[112,0,61,25],[112,27,70,8],[112,33,70,13,"props"],[112,38,61,25],[113,0,61,25],[113,12,63,6,"position"],[113,20,61,25],[113,36,63,6,"position"],[113,44,61,25],[114,0,61,25],[114,12,64,6,"navigation"],[114,22,61,25],[114,38,64,6,"navigation"],[114,48,61,25],[115,0,61,25],[115,12,65,6,"activeTintColor"],[115,27,61,25],[115,43,65,6,"activeTintColor"],[115,58,61,25],[116,0,61,25],[116,12,66,6,"inactiveTintColor"],[116,29,61,25],[116,45,66,6,"inactiveTintColor"],[116,62,61,25],[117,0,61,25],[117,12,67,6,"renderIcon"],[117,22,61,25],[117,38,67,6,"renderIcon"],[117,48,61,25],[118,0,61,25],[118,12,68,6,"showIcon"],[118,20,61,25],[118,36,68,6,"showIcon"],[118,44,61,25],[119,0,61,25],[119,12,69,6,"iconStyle"],[119,21,61,25],[119,37,69,6,"iconStyle"],[119,46,61,25],[121,0,71,4],[121,12,71,8,"showIcon"],[121,20,71,16],[121,25,71,21],[121,30,71,4],[121,32,71,28],[122,0,72,6],[122,17,72,13],[122,21,72,6],[123,0,73,5],[125,0,74,4],[125,15,75,6],[125,44,75,7],[125,63,75,6],[126,0,76,8],[126,10,76,8],[126,18,76,16],[126,20,76,18,"position"],[126,28,75,6],[127,0,77,8],[127,10,77,8],[127,20,77,18],[127,22,77,20,"navigation"],[127,32,75,6],[128,0,78,8],[128,10,78,8],[128,25,78,23],[128,27,78,25,"activeTintColor"],[128,42,75,6],[129,0,79,8],[129,10,79,8],[129,27,79,25],[129,29,79,27,"inactiveTintColor"],[129,46,75,6],[130,0,80,8],[130,10,80,8],[130,20,80,18],[130,22,80,20,"renderIcon"],[130,32,75,6],[131,0,81,8],[131,10,81,8],[131,15,81,13],[131,17,81,15,"scene"],[131,22,75,6],[132,0,82,8],[132,10,82,8],[132,15,82,13],[132,17,82,15],[132,18,82,16,"styles"],[132,24,82,22],[132,25,82,23,"icon"],[132,29,82,15],[132,31,82,29,"iconStyle"],[132,40,82,15],[132,41,75,6],[133,0,75,6],[134,0,75,6],[135,0,75,6],[136,0,75,6],[137,0,75,6],[137,10,74,4],[138,0,85,3],[138,7],[140,12,87,2,"_handleOnPress"],[140,26],[140,29,87,19],[140,39,87,19,"scene"],[140,44,87,24],[140,46,87,28],[141,0,87,28],[141,27,88,52],[141,33,88,57,"props"],[141,38,87,28],[142,0,87,28],[142,12,88,12,"getOnPress"],[142,22,87,28],[142,38,88,12,"getOnPress"],[142,48,87,28],[143,0,87,28],[143,12,88,24,"jumpToIndex"],[143,23,87,28],[143,39,88,24,"jumpToIndex"],[143,50,87,28],[144,0,87,28],[144,12,88,37,"navigation"],[144,22,87,28],[144,38,88,37,"navigation"],[144,48,87,28],[145,0,89,4],[145,12,89,10,"previousScene"],[145,25,89,23],[145,28,89,26,"navigation"],[145,38,89,36],[145,39,89,37,"state"],[145,44,89,26],[145,45,89,43,"routes"],[145,51,89,26],[145,52,89,50,"navigation"],[145,62,89,60],[145,63,89,61,"state"],[145,68,89,50],[145,69,89,67,"index"],[145,74,89,26],[145,75,89,4],[146,0,90,4],[146,12,90,10,"onPress"],[146,19,90,17],[146,22,90,20,"getOnPress"],[146,32,90,30],[146,33,90,31,"previousScene"],[146,46,90,30],[146,48,90,46,"scene"],[146,53,90,30],[146,54,90,4],[148,0,92,4],[148,12,92,8,"onPress"],[148,19,92,4],[148,21,92,17],[149,0,96,6,"onPress"],[149,10,96,6,"onPress"],[149,17,96,13],[149,18,96,14],[150,0,97,8,"previousScene"],[150,12,97,8,"previousScene"],[150,25,97,21],[150,27,97,8,"previousScene"],[150,40,96,14],[151,0,98,8,"scene"],[151,12,98,8,"scene"],[151,17,98,13],[151,19,98,8,"scene"],[151,24,96,14],[152,0,99,8,"jumpToIndex"],[152,12,99,8,"jumpToIndex"],[152,23,99,19],[152,25,99,8,"jumpToIndex"],[152,36,96,14],[153,0,100,8,"defaultHandler"],[153,12,100,8,"defaultHandler"],[153,26,100,22],[153,28,100,24,"jumpToIndex"],[154,0,96,14],[154,11,96,13],[154,12,96,6],[155,0,102,5],[155,9,92,4],[155,15,102,11],[156,0,103,6,"jumpToIndex"],[156,10,103,6,"jumpToIndex"],[156,21,103,17],[156,22,103,18,"scene"],[156,27,103,23],[156,28,103,24,"index"],[156,33,103,17],[156,34,103,6],[157,0,104,5],[158,0,105,3],[158,7],[165,31,107,11],[166,0,109,4],[166,12,109,10,"props"],[166,17,109,15],[166,20,109,18],[166,25,109,23,"props"],[166,30,109,4],[167,0,111,4],[167,15,112,6],[167,44,112,7],[167,70,112,6],[167,99,113,12,"props"],[167,104,112,6],[168,0,114,8],[168,10,114,8],[168,20,114,18],[168,22,114,20],[168,27,114,25,"_handleOnPress"],[168,41,112,6],[169,0,115,8],[169,10,115,8],[169,21,115,19],[169,23,115,21],[169,46,115,27],[169,47,115,29],[169,48,112,6],[170,0,116,8],[170,10,116,8],[170,20,116,18],[170,22,116,20],[170,27,116,25,"_renderIcon"],[170,38,112,6],[171,0,117,8],[171,10,117,8],[171,21,117,19],[171,23,117,21],[171,28,117,26,"_renderLabel"],[171,40,112,6],[172,0,112,6],[173,0,112,6],[174,0,112,6],[175,0,112,6],[176,0,112,6],[176,11,111,4],[177,0,120,3],[180,4,6,39,"React"],[180,19,6,45,"PureComponent"],[180,32],[183,0,6,21,"TabBarTop"],[183,2,6,21,"TabBarTop"],[183,11],[183,12,7,9,"defaultProps"],[183,24],[183,27,7,24],[184,0,8,4,"activeTintColor"],[184,4,8,4,"activeTintColor"],[184,19,8,19],[184,21,8,21],[184,27,7,24],[185,0,9,4,"inactiveTintColor"],[185,4,9,4,"inactiveTintColor"],[185,21,9,21],[185,23,9,23],[185,29,7,24],[186,0,10,4,"showIcon"],[186,4,10,4,"showIcon"],[186,12,10,12],[186,14,10,14],[186,19,7,24],[187,0,11,4,"showLabel"],[187,4,11,4,"showLabel"],[187,13,11,13],[187,15,11,15],[187,19,7,24],[188,0,12,4,"upperCaseLabel"],[188,4,12,4,"upperCaseLabel"],[188,18,12,18],[188,20,12,20],[188,24,7,24],[189,0,13,4,"allowFontScaling"],[189,4,13,4,"allowFontScaling"],[189,20,13,20],[189,22,13,22],[190,0,7,24],[190,3],[192,0,123,0],[192,6,123,6,"styles"],[192,12,123,12],[192,15,123,15,"StyleSheet"],[192,39,123,26,"create"],[192,45,123,15],[192,46,123,33],[193,0,124,2,"icon"],[193,4,124,2,"icon"],[193,8,124,6],[193,10,124,8],[194,0,125,4,"height"],[194,6,125,4,"height"],[194,12,125,10],[194,14,125,12],[194,16,124,8],[195,0,126,4,"width"],[195,6,126,4,"width"],[195,11,126,9],[195,13,126,11],[196,0,124,8],[196,5,123,33],[197,0,128,2,"label"],[197,4,128,2,"label"],[197,9,128,7],[197,11,128,9],[198,0,129,4,"textAlign"],[198,6,129,4,"textAlign"],[198,15,129,13],[198,17,129,15],[198,25,128,9],[199,0,130,4,"fontSize"],[199,6,130,4,"fontSize"],[199,14,130,12],[199,16,130,14],[199,18,128,9],[200,0,131,4,"margin"],[200,6,131,4,"margin"],[200,12,131,10],[200,14,131,12],[200,15,128,9],[201,0,132,4,"backgroundColor"],[201,6,132,4,"backgroundColor"],[201,21,132,19],[201,23,132,21],[202,0,128,9],[203,0,123,33],[203,3,123,15],[203,4,123,0]],"functionMap":{"names":["<global>","TabBarTop","_renderLabel","routes.map$argument_0","inputRange.map$argument_0","_renderIcon","_handleOnPress","render","TabBar.props.jumpToIndex"],"mappings":"AAA;eCK;iBCU;0CCkB,WD;MEE,0EF;GDuB;gBIE;GJwB;mBKE;GLkB;EME;qBCQ,QD;GNK;CDC"}},"type":"js/module"}]}